[
  {
    "name": "WeakCss",
    "comment": " Abstraction for working with [`Weak Css`](https://github.com/GlobalWebIndex/weak-css)\nstyle class names.\n\n# Type and Constructor\n\n@docs ClassName, namespace\n\n# Adding Elements\n\n@docs addElement\n\n# Convert to Attribute\n\n@docs toClass, nested, withStates\n\n",
    "aliases": [],
    "types": [
      {
        "name": "ClassName",
        "comment": " ClassName type describes class selector used to style element.\n\nAll strings are sanitized to prevent missuse and odd resulting selectors.\n**It's highly recommended to avoid spaces, `__` and `--` in arguments though.**\n",
        "args": [],
        "cases": []
      }
    ],
    "values": [
      {
        "name": "addElement",
        "comment": " Add element\n\n    >>> import Html.Attributes exposing (class)\n\n    >>> namespace \"menu\"\n    ... |> addElement \"list\"\n    ... |> toClass\n    class \"menu__list\"\n",
        "type": "String -> WeakCss.ClassName -> WeakCss.ClassName"
      },
      {
        "name": "namespace",
        "comment": " Construct [`ClassName`](#ClassName) with given namespace.\n\n    >>> import Html.Attributes exposing (class)\n\n    >>> namespace \"menu\" |> toClass\n    class \"menu\"\n",
        "type": "String -> WeakCss.ClassName"
      },
      {
        "name": "nested",
        "comment": " Add new element and convert to `Html.Attribute msg`.\n\n    >>> import Html.Attributes exposing (class)\n\n    >>> namespace \"menu\"\n    ... |> nested \"item\"\n    class \"menu__item\"\n\n    >>> namespace \"menu\"\n    ... |> addElement \"item\"\n    ... |> nested \"link\"\n    class \"menu__item--link\"\n",
        "type": "String -> WeakCss.ClassName -> Html.Attribute msg"
      },
      {
        "name": "toClass",
        "comment": " Convert [`ClassName`](#ClassName) to `Html.Attribute msg`.\n\n    >>> import Html.Attributes exposing (class)\n\n    >>> namespace \"menu\"\n    ... |> toClass\n    class \"menu\"\n\n    >>> namespace \"menu\"\n    ... |> addElement \"list\"\n    ... |> toClass\n    class \"menu__list\"\n",
        "type": "WeakCss.ClassName -> Html.Attribute msg"
      },
      {
        "name": "withStates",
        "comment": " Add state to last element [`ClassName`](#ClassName) and convert to `Html.Attrinute msg`.\n\n    >>> import Html.Attributes exposing (class)\n\n    >>> namespace \"menu\"\n    ... |> addElement \"item\"\n    ... |> withStates [\"active\", \"highlighted\"]\n    class \"menu__item active highlighted\"\n\n    >>> namespace \"menu\"\n    ... |> withStates []\n    class \"menu\"\n",
        "type": "List String -> WeakCss.ClassName -> Html.Attribute msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  }
]