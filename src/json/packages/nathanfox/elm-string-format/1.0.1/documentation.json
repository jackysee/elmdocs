[
  {
    "name": "String.Format",
    "comment": " String.Format provides methods to use a format String\n    with a tuple providing values for the place holders.\n\n@docs format1, format2, format3, format4, format5, format6, format7, format8, format9\n",
    "aliases": [],
    "types": [],
    "values": [
      {
        "name": "format1",
        "comment": " format1 will format a string with one variable.\n  val = 1\n  format1 \"val: {1}\" val\n  will create the string: val: 1\n",
        "type": "String -> a -> String"
      },
      {
        "name": "format2",
        "comment": " format2 will format a string with a 2 tuple\n  values = (1, 2)\n  format2 \"{1}, {2}\" values\n  will create the string: \"1, 2\"\n",
        "type": "String -> ( a, b ) -> String"
      },
      {
        "name": "format3",
        "comment": " format3 will format a string with a 3 tuple\n  values = (1, 2, 3)\n  format3 \"{1}, {2}, {3}\" values\n  will create the string: \"1, 2, 3\"\n",
        "type": "String -> ( a, b, c ) -> String"
      },
      {
        "name": "format4",
        "comment": " format4 will format a string with a 4 tuple\n  values = (1, 2, 3, 4)\n  format4 \"{1}, {2}, {3}, {4}\" values\n  will create the string: \"1, 2, 3, 4\"\n",
        "type": "String -> ( a, b, c, d ) -> String"
      },
      {
        "name": "format5",
        "comment": " format5 will format a string with a 5 tuple\n  values = (1, 2, 3, 4, 5)\n  format5 \"{1}, {2}, {3}, {4}, {5}\" values\n  will create the string: \"1, 2, 3, 4, 5\"\n",
        "type": "String -> ( a, b, c, d, e ) -> String"
      },
      {
        "name": "format6",
        "comment": " format6 will format a string with a 6 tuple\n  values = (1, 2, 3, 4, 5, 6)\n  format6 \"{1}, {2}, {3}, {4}, {5}, {6}\" values\n  will create the string: \"1, 2, 3, 4, 5, 6\"\n",
        "type": "String -> ( a, b, c, d, e, f ) -> String"
      },
      {
        "name": "format7",
        "comment": " format7 will format a string with a 7 tuple\n  values = (1, 2, 3, 4, 5, 6, 7)\n  format7 \"{1}, {2}, {3}, {4}, {5}, {6}, {7}\" values\n  will create the string: \"1, 2, 3, 4, 5, 6, 7\"\n",
        "type": "String -> ( a, b, c, d, e, f, g ) -> String"
      },
      {
        "name": "format8",
        "comment": " format8 will format a string with a 8 tuple\n  values = (1, 2, 3, 4, 5, 6, 7, 8)\n  format8 \"{1}, {2}, {3}, {4}, {5}, {6}, {7}, {8}\" values\n  will create the string: \"1, 2, 3, 4, 5, 6, 7, 8\"\n",
        "type": "String -> ( a, b, c, d, e, f, g, h ) -> String"
      },
      {
        "name": "format9",
        "comment": " format9 will format a string with a 8 tuple\n  values = (1, 2, 3, 4, 5, 6, 7, 8, 9)\n  format9 \"{1}, {2}, {3}, {4}, {5}, {6}, {7}, {8}, {9}\" values\n  will create the string: \"1, 2, 3, 4, 5, 6, 7, 8, 9\"\n",
        "type": "String -> ( a, b, c, d, e, f, g, h, i ) -> String"
      }
    ],
    "generated-with-elm-version": "0.17.1"
  }
]