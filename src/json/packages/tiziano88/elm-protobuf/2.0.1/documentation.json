[
  {
    "name": "Protobuf",
    "comment": " Runtime library for Google Protocol Buffers.\n\nThis is mostly useless on its own, it is meant to support the code generated by the [Elm Protocol\nBuffer compiler](https://github.com/tiziano88/elm-protobuf).\n\n# Decoder Helpers\n\n@docs decode, required, optional, repeated, field\n\n@docs withDefault\n\n# Encoder Helpers\n\n@docs requiredFieldEncoder, optionalEncoder, repeatedFieldEncoder\n\n# Bytes\n\n@docs Bytes, bytesFieldDecoder, bytesFieldEncoder\n\n# Well Known Types\n\n@docs Timestamp, timestampDecoder, timestampEncoder\n\n@docs intValueDecoder, intValueEncoder\n\n@docs stringValueDecoder, stringValueEncoder\n\n@docs boolValueDecoder, boolValueEncoder\n\n@docs bytesValueDecoder, bytesValueEncoder\n\n@docs floatValueDecoder, floatValueEncoder\n",
    "aliases": [
      {
        "name": "Bytes",
        "comment": " Bytes field.\n",
        "args": [],
        "type": "List Int"
      },
      {
        "name": "Timestamp",
        "comment": " Timestamp.\n",
        "args": [],
        "type": "Date.Date"
      }
    ],
    "types": [],
    "values": [
      {
        "name": "boolValueDecoder",
        "comment": " Encodes a BoolValue.\n",
        "type": "Json.Decode.Decoder Bool"
      },
      {
        "name": "boolValueEncoder",
        "comment": " Encodes a BoolValue.\n",
        "type": "Bool -> Json.Encode.Value"
      },
      {
        "name": "bytesFieldDecoder",
        "comment": " Decodes a bytes field.\nTODO: Implement.\n",
        "type": "Json.Decode.Decoder Protobuf.Bytes"
      },
      {
        "name": "bytesFieldEncoder",
        "comment": " Encodes a bytes field.\nTODO: Implement.\n",
        "type": "Protobuf.Bytes -> Json.Encode.Value"
      },
      {
        "name": "bytesValueDecoder",
        "comment": " Decodes a BytesValue.\n",
        "type": "Json.Decode.Decoder Protobuf.Bytes"
      },
      {
        "name": "bytesValueEncoder",
        "comment": " Encodes a BytesValue.\n",
        "type": "Protobuf.Bytes -> Json.Encode.Value"
      },
      {
        "name": "decode",
        "comment": " Decodes a message.\n",
        "type": "a -> Json.Decode.Decoder a"
      },
      {
        "name": "field",
        "comment": " Decodes a field.\n",
        "type": "Json.Decode.Decoder a -> Json.Decode.Decoder (a -> b) -> Json.Decode.Decoder b"
      },
      {
        "name": "floatValueDecoder",
        "comment": " Decodes a FloatValue.\n",
        "type": "Json.Decode.Decoder Float"
      },
      {
        "name": "floatValueEncoder",
        "comment": " Encodes a FloatValue.\n",
        "type": "Float -> Json.Encode.Value"
      },
      {
        "name": "intValueDecoder",
        "comment": " Decodes an IntValue.\n",
        "type": "Json.Decode.Decoder Int"
      },
      {
        "name": "intValueEncoder",
        "comment": " Encodes an IntValue.\n",
        "type": "Int -> Json.Encode.Value"
      },
      {
        "name": "optional",
        "comment": " Decodes an optional field.\n",
        "type": "String -> Json.Decode.Decoder a -> Json.Decode.Decoder (Maybe.Maybe a -> b) -> Json.Decode.Decoder b"
      },
      {
        "name": "optionalEncoder",
        "comment": " Encodes an optional field.\n",
        "type": "String -> (a -> Json.Encode.Value) -> Maybe.Maybe a -> Maybe.Maybe ( String, Json.Encode.Value )"
      },
      {
        "name": "repeated",
        "comment": " Decodes a repeated field.\n",
        "type": "String -> Json.Decode.Decoder a -> Json.Decode.Decoder (List a -> b) -> Json.Decode.Decoder b"
      },
      {
        "name": "repeatedFieldEncoder",
        "comment": " Encodes a repeated field.\n",
        "type": "String -> (a -> Json.Encode.Value) -> List a -> Maybe.Maybe ( String, Json.Encode.Value )"
      },
      {
        "name": "required",
        "comment": " Decodes a required field.\n",
        "type": "String -> Json.Decode.Decoder a -> a -> Json.Decode.Decoder (a -> b) -> Json.Decode.Decoder b"
      },
      {
        "name": "requiredFieldEncoder",
        "comment": " Encodes a required field.\n",
        "type": "String -> (a -> Json.Encode.Value) -> a -> a -> Maybe.Maybe ( String, Json.Encode.Value )"
      },
      {
        "name": "stringValueDecoder",
        "comment": " Decodes a StringValue.\n",
        "type": "Json.Decode.Decoder String"
      },
      {
        "name": "stringValueEncoder",
        "comment": " Encodes a StringValue.\n",
        "type": "String -> Json.Encode.Value"
      },
      {
        "name": "timestampDecoder",
        "comment": " Decodes a Timestamp.\n",
        "type": "Json.Decode.Decoder Protobuf.Timestamp"
      },
      {
        "name": "timestampEncoder",
        "comment": " Encodes a Timestamp.\n",
        "type": "Protobuf.Timestamp -> Json.Encode.Value"
      },
      {
        "name": "withDefault",
        "comment": " Provides a default value for a field.\n",
        "type": "a -> Json.Decode.Decoder a -> Json.Decode.Decoder a"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  }
]