[
  {
    "name": "CssBasics.Properties",
    "comment": "\n@docs property\n",
    "aliases": [],
    "types": [],
    "values": [
      {
        "name": "property",
        "comment": " All CSS property names in a record set\n\n    { alignContent = \"align-content\"\n    , alignItems = \"align-items\"\n    , alignSelf = \"align-self\"\n    , all = \"all\"\n    , animation = \"animation\"\n    , animationDelay = \"animation-delay\"\n    , animationDirection = \"animation-direction\"\n    , animationDuration = \"animation-duration\"\n    , animationFillMode = \"animation-fill-mode\"\n    , animationIterationCount = \"animation-iteration-count\"\n    , animationName = \"animation-name\"\n    , animationPlayState = \"animation-play-state\"\n    , animationTimingFunction = \"animation-timing-function\"\n    , azimuth = \"azimuth\"\n    , backfaceVisibility = \"backface-visibility\"\n    , backgroundAttachment = \"background-attachment\"\n    , backgroundBlendMode = \"background-blend-mode\"\n    , backgroundClip = \"background-clip\"\n    , backgroundColor = \"background-color\"\n    , backgroundImage = \"background-image\"\n    , backgroundOrigin = \"background-origin\"\n    , backgroundPosition = \"background-position\"\n    , backgroundRepeat = \"background-repeat\"\n    , backgroundSize = \"background-size\"\n    , background = \"background\"\n    , bleed = \"bleed\"\n    , borderBottomColor = \"border-bottom-color\"\n    , borderBottomLeftRadius = \"border-bottom-left-radius\"\n    , borderBottomRightRadius = \"border-bottom-right-radius\"\n    , borderBottomStyle = \"border-bottom-style\"\n    , borderBottomWidth = \"border-bottom-width\"\n    , borderBottom = \"border-bottom\"\n    , borderCollapse = \"border-collapse\"\n    , borderColor = \"border-color\"\n    , borderImage = \"border-image\"\n    , borderImageOutset = \"border-image-outset\"\n    , borderImageRepeat = \"border-image-repeat\"\n    , borderImageSource = \"border-image-source\"\n    , borderImageSlice = \"border-image-slice\"\n    , borderImageWidth = \"border-image-width\"\n    , borderLeftColor = \"border-left-color\"\n    , borderLeftStyle = \"border-left-style\"\n    , borderLeftWidth = \"border-left-width\"\n    , borderLeft = \"border-left\"\n    , borderRadius = \"border-radius\"\n    , borderRightColor = \"border-right-color\"\n    , borderRightStyle = \"border-right-style\"\n    , borderRightWidth = \"border-right-width\"\n    , borderRight = \"border-right\"\n    , borderSpacing = \"border-spacing\"\n    , borderStyle = \"border-style\"\n    , borderTopColor = \"border-top-color\"\n    , borderTopLeftRadius = \"border-top-left-radius\"\n    , borderTopRightRadius = \"border-top-right-radius\"\n    , borderTopStyle = \"border-top-style\"\n    , borderTopWidth = \"border-top-width\"\n    , borderTop = \"border-top\"\n    , borderWidth = \"border-width\"\n    , border = \"border\"\n    , bottom = \"bottom\"\n    , boxDecorationBreak = \"box-decoration-break\"\n    , boxShadow = \"box-shadow\"\n    , boxSizing = \"box-sizing\"\n    , breakAfter = \"break-after\"\n    , breakBefore = \"break-before\"\n    , breakInside = \"break-inside\"\n    , captionSide = \"caption-side\"\n    , clear = \"clear\"\n    , clip = \"clip\"\n    , color = \"color\"\n    , columns = \"columns\"\n    , columnCount = \"column-count\"\n    , columnFill = \"column-fill\"\n    , columnGap = \"column-gap\"\n    , columnRule = \"column-rule\"\n    , columnRuleColor = \"column-rule-color\"\n    , columnRuleStyle = \"column-rule-style\"\n    , columnRuleWidth = \"column-rule-width\"\n    , columnSpan = \"column-span\"\n    , columnWidth = \"column-width\"\n    , content = \"content\"\n    , counterIncrement = \"counter-increment\"\n    , counterReset = \"counter-reset\"\n    , cueAfter = \"cue-after\"\n    , cueBefore = \"cue-before\"\n    , cue = \"cue\"\n    , cursor = \"cursor\"\n    , direction = \"direction\"\n    , display = \"display\"\n    , elevation = \"elevation\"\n    , emptyCells = \"empty-cells\"\n    , filter = \"filter\"\n    , flex = \"flex\"\n    , flexBasis = \"flex-basis\"\n    , flexDirection = \"flex-direction\"\n    , flexFlow = \"flex-flow\"\n    , flexGrow = \"flex-grow\"\n    , flexShrink = \"flex-shrink\"\n    , flexWrap = \"flex-wrap\"\n    , float = \"float\"\n    , fontFamily = \"font-family\"\n    , fontKerning = \"font-kerning\"\n    , fontSizeAdjust = \"font-size-adjust\"\n    , fontSize = \"font-size\"\n    , fontStretch = \"font-stretch\"\n    , fontStyle = \"font-style\"\n    , fontVariant = \"font-variant\"\n    , fontWeight = \"font-weight\"\n    , font = \"font\"\n    , hangingPunctuation = \"hanging-punctuation\"\n    , height = \"height\"\n    , hyphens = \"hyphens\"\n    , isolation = \"isolation\"\n    , justifyContent = \"justify-content\"\n    , left = \"left\"\n    , letterSpacing = \"letter-spacing\"\n    , lineBreak = \"line-break\"\n    , lineHeight = \"line-height\"\n    , listStyleImage = \"list-style-image\"\n    , listStylePosition = \"list-style-position\"\n    , listStyleType = \"list-style-type\"\n    , listStyle = \"list-style\"\n    , marginBottom = \"margin-bottom\"\n    , marginLeft = \"margin-left\"\n    , marginRight = \"margin-right\"\n    , marginTop = \"margin-top\"\n    , margin = \"margin\"\n    , markerOffset = \"marker-offset\"\n    , marks = \"marks\"\n    , maxHeight = \"max-height\"\n    , maxWidth = \"max-width\"\n    , minHeight = \"min-height\"\n    , minWidth = \"min-width\"\n    , mixBlendMode = \"mix-blend-mode\"\n    , navUp = \"nav-up\"\n    , navDown = \"nav-down\"\n    , navLeft = \"nav-left\"\n    , navRight = \"nav-right\"\n    , opacity = \"opacity\"\n    , order = \"order\"\n    , orphans = \"orphans\"\n    , outlineColor = \"outline-color\"\n    , outlineOffset = \"outline-offset\"\n    , outlineStyle = \"outline-style\"\n    , outlineWidth = \"outline-width\"\n    , outline = \"outline\"\n    , overflow = \"overflow\"\n    , overflowWrap = \"overflow-wrap\"\n    , overflowX = \"overflow-x\"\n    , overflowY = \"overflow-y\"\n    , paddingBottom = \"padding-bottom\"\n    , paddingLeft = \"padding-left\"\n    , paddingRight = \"padding-right\"\n    , paddingTop = \"padding-top\"\n    , padding = \"padding\"\n    , pageBreakAfter = \"page-break-after\"\n    , pageBreakBefore = \"page-break-before\"\n    , pageBreakInside = \"page-break-inside\"\n    , page = \"page\"\n    , pauseAfter = \"pause-after\"\n    , pauseBefore = \"pause-before\"\n    , pause = \"pause\"\n    , perspective = \"perspective\"\n    , perspectiveOrigin = \"perspective-origin\"\n    , pitchRange = \"pitch-range\"\n    , pitch = \"pitch\"\n    , playDuring = \"play-during\"\n    , position = \"position\"\n    , quotes = \"quotes\"\n    , resize = \"resize\"\n    , restAfter = \"rest-after\"\n    , restBefore = \"rest-before\"\n    , rest = \"rest\"\n    , richness = \"richness\"\n    , right = \"right\"\n    , size = \"size\"\n    , speakHeader = \"speak-header\"\n    , speakNumeral = \"speak-numeral\"\n    , speakPunctuation = \"speak-punctuation\"\n    , speak = \"speak\"\n    , speechRate = \"speech-rate\"\n    , stress = \"stress\"\n    , tabSize = \"tab-size\"\n    , tableLayout = \"table-layout\"\n    , textAlign = \"text-align\"\n    , textAlignLast = \"text-align-last\"\n    , textDecoration = \"text-decoration\"\n    , textDecorationColor = \"text-decoration-color\"\n    , textDecorationLine = \"text-decoration-line\"\n    , textDecorationSkip = \"text-decoration-skip\"\n    , textDecorationStyle = \"text-decoration-style\"\n    , textIndent = \"text-indent\"\n    , textOverflow = \"text-overflow\"\n    , textShadow = \"text-shadow\"\n    , textTransform = \"text-transform\"\n    , textUnderlinePosition = \"text-underline-position\"\n    , top = \"top\"\n    , transform = \"transform\"\n    , transformOrigin = \"transform-origin\"\n    , transformStyle = \"transform-style\"\n    , transition = \"transition\"\n    , transitionDelay = \"transition-delay\"\n    , transitionDuration = \"transition-duration\"\n    , transitionProperty = \"transition-property\"\n    , transitionTimingFunction = \"transition-timing-function\"\n    , unicodeBidi = \"unicode-bidi\"\n    , verticalAlign = \"vertical-align\"\n    , visibility = \"visibility\"\n    , voiceBalance = \"voice-balance\"\n    , voiceDuration = \"voice-duration\"\n    , voiceFamily = \"voice-family\"\n    , voicePitch = \"voice-pitch\"\n    , voiceRange = \"voice-range\"\n    , voiceRate = \"voice-rate\"\n    , voiceStress = \"voice-stress\"\n    , voiceVolume = \"voice-volume\"\n    , volume = \"volume\"\n    , whiteSpace = \"white-space\"\n    , widows = \"widows\"\n    , width = \"width\"\n    , wordBreak = \"word-break\"\n    , wordSpacing = \"word-spacing\"\n    , wordWrap = \"word-wrap\"\n    , zIndex = \"z-index\"\n    }\n",
        "type": "CssBasics.Properties.Property"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "CssBasics",
    "comment": "\n## Some basic helpers for generating CSS style declarations\n\n# CSS Representation\n@docs Declaration, CssValue, UnitType, important\n\n# Encoding CSS Values and Declarations\n@docs encodeCssValue, encodeDeclaration\n\n# Rendering to a Style Attribute\n@docs toStyleAttribute\n\n",
    "aliases": [
      {
        "name": "Declaration",
        "comment": " A declaration is a key-value pair consisting of a style\n[property](http://www.w3schools.com/cssref/default.asp)\nname and the value assigned to that property. The property is given as a string\nand the value is given as a `CssValue`.\n",
        "args": [],
        "type": "( String, CssBasics.CssValue )"
      }
    ],
    "types": [
      {
        "name": "CssValue",
        "comment": " Represents the types of values that may be assigned to a style property.\n\n__Examples:__\n\n    (\"text-align\", Str \"center\")\n      --> text-align:center;\n\n    (\"color\", Col (Color.rgb 0 102 255))\n      --> color:rgba(0,102,255,1);\n\n    (\"font-weight\", Num 700)\n      --> font-weight:700;\n\n    (\"font-size\", Unit 2 Em)\n      --> font-size:2em;\n\n    (\"font-family\", FontStack [\"Helvetica Neue\", \"Roboto\", \"sans-serif\"])\n      --> font-family:'Helvetica Neue',Roboto,sans-serif;\n\n    (\"margin\", Sides [Unit 10 Px, Unit 20 Px])\n      --> margin:10px 20px;\n\n    (\"border\", Multiple \" \" [Unit 2 Px, Str \"dashed\", Str \"green\"])\n      --> border:2px dashed green;\n\n    (\"padding\", Important (Unit 0 NoUnit))\n      --> padding:0!important;\n\n    (\"color\", Undefined)\n      --> color:inherit;\n\nNote that `Undefined` is not a null value, but a default used for error\nhandling. When rendered to a string or attribute, a property with an `Undefined`\nvalue will be assigned the value\n[`inherit`](https://developer.mozilla.org/en-US/docs/Web/CSS/inherit).\n\n",
        "args": [],
        "cases": [
          [
            "Str",
            [
              "String"
            ]
          ],
          [
            "Col",
            [
              "Color.Color"
            ]
          ],
          [
            "Num",
            [
              "Float"
            ]
          ],
          [
            "Integer",
            [
              "Int"
            ]
          ],
          [
            "Unit",
            [
              "Float",
              "CssBasics.UnitType"
            ]
          ],
          [
            "FontStack",
            [
              "List String"
            ]
          ],
          [
            "Sides",
            [
              "List CssBasics.CssValue"
            ]
          ],
          [
            "Multiple",
            [
              "String",
              "List CssBasics.CssValue"
            ]
          ],
          [
            "Important",
            [
              "CssBasics.CssValue"
            ]
          ],
          [
            "Undefined",
            []
          ]
        ]
      },
      {
        "name": "UnitType",
        "comment": " Represents an absolute or relative unit of length. A length of zero may be\nrepresented as `Unit 0 NoUnit`, or simply as `Num 0`.\n",
        "args": [],
        "cases": [
          [
            "Percent",
            []
          ],
          [
            "Em",
            []
          ],
          [
            "Ex",
            []
          ],
          [
            "Ch",
            []
          ],
          [
            "Rem",
            []
          ],
          [
            "Px",
            []
          ],
          [
            "Cm",
            []
          ],
          [
            "Mm",
            []
          ],
          [
            "In",
            []
          ],
          [
            "Pt",
            []
          ],
          [
            "Pc",
            []
          ],
          [
            "Vh",
            []
          ],
          [
            "Vw",
            []
          ],
          [
            "Vmin",
            []
          ],
          [
            "Vmax",
            []
          ],
          [
            "NoUnit",
            []
          ]
        ]
      }
    ],
    "values": [
      {
        "name": "encodeCssValue",
        "comment": " Convert a `CssValue` to a properly formatted string\n",
        "type": "CssBasics.CssValue -> String"
      },
      {
        "name": "encodeDeclaration",
        "comment": " Convert a `Declaration` to a string of CSS code, formatted as\n`\"property:value;\"`\n",
        "type": "CssBasics.Declaration -> String"
      },
      {
        "name": "important",
        "comment": " Add \"!important\" to a style declaration\n",
        "type": "CssBasics.Declaration -> CssBasics.Declaration"
      },
      {
        "name": "toStyleAttribute",
        "comment": " Given a list of declarations, return a `style` attribute that may be\napplied to an `Html` node\n",
        "type": "List CssBasics.Declaration -> Html.Attribute msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  }
]