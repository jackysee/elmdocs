[
  {
    "name": "Keyboard.Extra",
    "comment": " Add simple and complex hotkeys to your application with a single case\nstatement.\n\nSome kinds of keycombinations you can dispatch against:\n\n- Press and release A and B while Shift is held\n- Press and release J while Shift and Tab are held down\n- Press and release keys in a specific order A B C but not A C B\n\n### Warning: This library does not implement debouncing logic.\nWhen holding multiple keys down, you will usually see a stream of keyup and\nkeydown events for the last key to be held down. You will have to come up with\nyour own logic to handle the flickering of the last key if your application\nrelies on multiple key press and hold combos.\n\n# Wiring\n@docs Msg, Model, subscriptions, init, update\n\n# Helpers\nPrefer to use helper functions on the Keyboard.Extra.Model to get the Nth most\nrecent key press rather than directly accessing the Model fields. The helper\nfunction API will almost certainly not change, but the Model type almost\ncertainly will.\n@docs mostRecentKeyDown, secondRecentKeyDown, thirdRecentKeyDown, mostRecentKeyUp\n\n",
    "aliases": [
      {
        "name": "Model",
        "comment": " A record containing a keyState field designed to be used directly in case\nstatements. The first element of the keyState tuple is the list of keys pressed\nsorted by KeyCode. The assumptions being when a key combo\nrequires multiple keys being held down, the exact order of keydown events does\nnot matter.\n\nExample:\n\n    -- This is a valid model\n    { keyState = ( [ Tab, Shift, CharD ], [] )\n    , pressHistory = [ Tab, CharD, Shift ]\n    -- ...\n    }\n\n    -- Another valid history\n    { keyState = ( [ Tab, Shift, CharD ], [] )\n    , pressHistory = [ CharD, Shift, Tab ]\n    -- ...\n    }\n\nThe second element of the keyState tuple is a list of keys sorted by KeyCode.\n Both of the tuple elements are limited to a\nlength of 3 to help deal with missing onkeyup events that are swallowed by\nbrowser bugs.\n\nExample:\n\n    -- This is a valid model\n    { keyState = ( [ Shift, CharD ], [ Tab ] )\n    , pressHistory = [ CharD, Shift ]\n    , releaseHistory = [ Tab ]\n    }\n\n    -- After another release, note that keyState lists are sorted by KeyCode\n    { keyState = ( [ CharD ], [ Tab, Shift ] )\n    , pressHistory = [ CharD ]\n    , releaseHistory = [ Shift, Tab ]\n    }\n",
        "args": [],
        "type": "{ keyState : ( List Keyboard.Extra.Keys.Key , List Keyboard.Extra.Keys.Key ) , pressHistory : List Keyboard.Extra.Keys.Key , releaseHistory : List Keyboard.Extra.Keys.Key }"
      }
    ],
    "types": [
      {
        "name": "Msg",
        "comment": " The message type `Keyboard.Extra` uses.\n",
        "args": [],
        "cases": [
          [
            "Down",
            [
              "Keyboard.KeyCode"
            ]
          ],
          [
            "Up",
            [
              "Keyboard.KeyCode"
            ]
          ]
        ]
      }
    ],
    "values": [
      {
        "name": "init",
        "comment": " Use this to initialize the component.\n",
        "type": "Keyboard.Extra.Model"
      },
      {
        "name": "mostRecentKeyDown",
        "comment": " Figure out the most recently pressed key\n",
        "type": "Keyboard.Extra.Model -> Maybe.Maybe Keyboard.Extra.Keys.Key"
      },
      {
        "name": "mostRecentKeyUp",
        "comment": " Figure out the most recently released key. Prefer using this function to\njust pattern matching on the head of the list in second element of the\n`keyState` tuple. Even though there is always only either one or zero elements,\nI am looking still thinking of a way to represent\n",
        "type": "Keyboard.Extra.Model -> Maybe.Maybe Keyboard.Extra.Keys.Key"
      },
      {
        "name": "secondRecentKeyDown",
        "comment": " Figure out the second most recently pressed key\n",
        "type": "Keyboard.Extra.Model -> Maybe.Maybe Keyboard.Extra.Keys.Key"
      },
      {
        "name": "subscriptions",
        "comment": " You will need to add this to your program's subscriptions.\n",
        "type": "Platform.Sub.Sub Keyboard.Extra.Msg"
      },
      {
        "name": "thirdRecentKeyDown",
        "comment": " Figure out the third most recently pressed key\n",
        "type": "Keyboard.Extra.Model -> Maybe.Maybe Keyboard.Extra.Keys.Key"
      },
      {
        "name": "update",
        "comment": " You need to call this to have the component update.\n\nWhen a duplicate keydown event arrives for any key already in the key down list\n, that key is moved to the head of the pressHistory list, but the keyState field\nwill be unchanged because the set of keys pressed down has not changed.\n",
        "type": "Keyboard.Extra.Msg -> Keyboard.Extra.Model -> Keyboard.Extra.Model"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Keyboard.Extra.Keys",
    "comment": " This module provides a Union type giving a name for all reasonable \n`Keyboard.KeyCode` values that common US English keyboards will produce.\nThis module lets you refer to the shift key as `Shift` instead of writing the\ninteger literal `16` everywhere.\n\n# Low level\n@docs fromKeyCode, toKeyCode\n\n# Keyboard keys\n@docs Key\n\n",
    "aliases": [],
    "types": [
      {
        "name": "Key",
        "comment": " These are all the keys that have names in `Keyboard.Extra`.\n",
        "args": [],
        "cases": [
          [
            "Cancel",
            []
          ],
          [
            "Help",
            []
          ],
          [
            "BackSpace",
            []
          ],
          [
            "Tab",
            []
          ],
          [
            "Clear",
            []
          ],
          [
            "Enter",
            []
          ],
          [
            "Shift",
            []
          ],
          [
            "Control",
            []
          ],
          [
            "Alt",
            []
          ],
          [
            "Pause",
            []
          ],
          [
            "CapsLock",
            []
          ],
          [
            "Escape",
            []
          ],
          [
            "Convert",
            []
          ],
          [
            "NonConvert",
            []
          ],
          [
            "Accept",
            []
          ],
          [
            "ModeChange",
            []
          ],
          [
            "Space",
            []
          ],
          [
            "PageUp",
            []
          ],
          [
            "PageDown",
            []
          ],
          [
            "End",
            []
          ],
          [
            "Home",
            []
          ],
          [
            "ArrowLeft",
            []
          ],
          [
            "ArrowUp",
            []
          ],
          [
            "ArrowRight",
            []
          ],
          [
            "ArrowDown",
            []
          ],
          [
            "Select",
            []
          ],
          [
            "Print",
            []
          ],
          [
            "Execute",
            []
          ],
          [
            "PrintScreen",
            []
          ],
          [
            "Insert",
            []
          ],
          [
            "Delete",
            []
          ],
          [
            "Number0",
            []
          ],
          [
            "Number1",
            []
          ],
          [
            "Number2",
            []
          ],
          [
            "Number3",
            []
          ],
          [
            "Number4",
            []
          ],
          [
            "Number5",
            []
          ],
          [
            "Number6",
            []
          ],
          [
            "Number7",
            []
          ],
          [
            "Number8",
            []
          ],
          [
            "Number9",
            []
          ],
          [
            "Colon",
            []
          ],
          [
            "Semicolon",
            []
          ],
          [
            "LessThan",
            []
          ],
          [
            "Equals",
            []
          ],
          [
            "GreaterThan",
            []
          ],
          [
            "QuestionMark",
            []
          ],
          [
            "At",
            []
          ],
          [
            "CharA",
            []
          ],
          [
            "CharB",
            []
          ],
          [
            "CharC",
            []
          ],
          [
            "CharD",
            []
          ],
          [
            "CharE",
            []
          ],
          [
            "CharF",
            []
          ],
          [
            "CharG",
            []
          ],
          [
            "CharH",
            []
          ],
          [
            "CharI",
            []
          ],
          [
            "CharJ",
            []
          ],
          [
            "CharK",
            []
          ],
          [
            "CharL",
            []
          ],
          [
            "CharM",
            []
          ],
          [
            "CharN",
            []
          ],
          [
            "CharO",
            []
          ],
          [
            "CharP",
            []
          ],
          [
            "CharQ",
            []
          ],
          [
            "CharR",
            []
          ],
          [
            "CharS",
            []
          ],
          [
            "CharT",
            []
          ],
          [
            "CharU",
            []
          ],
          [
            "CharV",
            []
          ],
          [
            "CharW",
            []
          ],
          [
            "CharX",
            []
          ],
          [
            "CharY",
            []
          ],
          [
            "CharZ",
            []
          ],
          [
            "Super",
            []
          ],
          [
            "ContextMenu",
            []
          ],
          [
            "Sleep",
            []
          ],
          [
            "Numpad0",
            []
          ],
          [
            "Numpad1",
            []
          ],
          [
            "Numpad2",
            []
          ],
          [
            "Numpad3",
            []
          ],
          [
            "Numpad4",
            []
          ],
          [
            "Numpad5",
            []
          ],
          [
            "Numpad6",
            []
          ],
          [
            "Numpad7",
            []
          ],
          [
            "Numpad8",
            []
          ],
          [
            "Numpad9",
            []
          ],
          [
            "Multiply",
            []
          ],
          [
            "Add",
            []
          ],
          [
            "Separator",
            []
          ],
          [
            "Subtract",
            []
          ],
          [
            "Decimal",
            []
          ],
          [
            "Divide",
            []
          ],
          [
            "F1",
            []
          ],
          [
            "F2",
            []
          ],
          [
            "F3",
            []
          ],
          [
            "F4",
            []
          ],
          [
            "F5",
            []
          ],
          [
            "F6",
            []
          ],
          [
            "F7",
            []
          ],
          [
            "F8",
            []
          ],
          [
            "F9",
            []
          ],
          [
            "F10",
            []
          ],
          [
            "F11",
            []
          ],
          [
            "F12",
            []
          ],
          [
            "F13",
            []
          ],
          [
            "F14",
            []
          ],
          [
            "F15",
            []
          ],
          [
            "F16",
            []
          ],
          [
            "F17",
            []
          ],
          [
            "F18",
            []
          ],
          [
            "F19",
            []
          ],
          [
            "F20",
            []
          ],
          [
            "F21",
            []
          ],
          [
            "F22",
            []
          ],
          [
            "F23",
            []
          ],
          [
            "F24",
            []
          ],
          [
            "NumLock",
            []
          ],
          [
            "ScrollLock",
            []
          ],
          [
            "Circumflex",
            []
          ],
          [
            "Exclamation",
            []
          ],
          [
            "DoubleQuote",
            []
          ],
          [
            "Hash",
            []
          ],
          [
            "Dollar",
            []
          ],
          [
            "Percent",
            []
          ],
          [
            "Ampersand",
            []
          ],
          [
            "Underscore",
            []
          ],
          [
            "OpenParen",
            []
          ],
          [
            "CloseParen",
            []
          ],
          [
            "Asterisk",
            []
          ],
          [
            "Plus",
            []
          ],
          [
            "Pipe",
            []
          ],
          [
            "HyphenMinus",
            []
          ],
          [
            "OpenCurlyBracket",
            []
          ],
          [
            "CloseCurlyBracket",
            []
          ],
          [
            "Tilde",
            []
          ],
          [
            "VolumeMute",
            []
          ],
          [
            "VolumeDown",
            []
          ],
          [
            "VolumeUp",
            []
          ],
          [
            "Comma",
            []
          ],
          [
            "Minus",
            []
          ],
          [
            "Period",
            []
          ],
          [
            "Slash",
            []
          ],
          [
            "BackQuote",
            []
          ],
          [
            "OpenBracket",
            []
          ],
          [
            "BackSlash",
            []
          ],
          [
            "CloseBracket",
            []
          ],
          [
            "Quote",
            []
          ],
          [
            "Meta",
            []
          ],
          [
            "Altgr",
            []
          ],
          [
            "Other",
            []
          ]
        ]
      }
    ],
    "values": [
      {
        "name": "fromKeyCode",
        "comment": " Convert a key code into a `Key`.\n",
        "type": "Keyboard.KeyCode -> Keyboard.Extra.Keys.Key"
      },
      {
        "name": "toKeyCode",
        "comment": " Convert a `Key` into a key code.\n",
        "type": "Keyboard.Extra.Keys.Key -> Keyboard.KeyCode"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  }
]