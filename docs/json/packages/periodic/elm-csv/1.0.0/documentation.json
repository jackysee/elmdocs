[
  {
    "name": "Csv",
    "comment": " A parser for transforming CSV strings into usable input.\n\nThis library does its best to support RFC 4180, however, many CSV inputs do not strictly follow the standard.  There are two major deviations assumed in this library.\n\n1. The `\\n` character may be used instead of `\\r\\n` for new-lines.\n2. The trailing new-line may be omitted.\n\n# Types\n@docs Csv\n\n# Functions\n@docs parse\n",
    "aliases": [
      {
        "name": "Csv",
        "comment": " Represents a CSV document.  All CSV documents are have a header row, even if that row is empty.\n",
        "args": [],
        "type": "{ headers : List String, records : List (List String) }"
      }
    ],
    "types": [],
    "values": [
      {
        "name": "parse",
        "comment": " Parse a CSV string into it's constituent fields.\n",
        "type": "String -> Result.Result (List String) Csv.Csv"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  }
]