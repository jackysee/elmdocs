[
  {
    "name": "Polymer.App",
    "comment": "\n@docs drawer\n@docs drawerLayout\n@docs header\n@docs headerLayout\n@docs route\n@docs toolbar\n",
    "aliases": [],
    "types": [],
    "values": [
      {
        "name": "drawer",
        "comment": " ",
        "type": "List (Html.Attribute msg) -> List (Html.Html msg) -> Html.Html msg"
      },
      {
        "name": "drawerLayout",
        "comment": " ",
        "type": "List (Html.Attribute msg) -> List (Html.Html msg) -> Html.Html msg"
      },
      {
        "name": "header",
        "comment": " ",
        "type": "List (Html.Attribute msg) -> List (Html.Html msg) -> Html.Html msg"
      },
      {
        "name": "headerLayout",
        "comment": " ",
        "type": "List (Html.Attribute msg) -> List (Html.Html msg) -> Html.Html msg"
      },
      {
        "name": "route",
        "comment": " ",
        "type": "List (Html.Attribute msg) -> List (Html.Html msg) -> Html.Html msg"
      },
      {
        "name": "toolbar",
        "comment": " ",
        "type": "List (Html.Attribute msg) -> List (Html.Html msg) -> Html.Html msg"
      }
    ],
    "generated-with-elm-version": "0.17.1"
  },
  {
    "name": "Polymer.Paper",
    "comment": "\n#Material design status message for elements\n@docs badge\n#Common behaviors across the paper elements\n@docs behaviors\n#Material design button\n@docs button\n#Material design piece of paper with unique related data\n@docs card\n#A material design checkbox\n@docs checkbox\n#A Material Design dialog\n@docs dialog\n#Implements a behavior used for material design dialogs\n@docs dialogBehavior\n#A scrollable area used inside the material design dialog\n@docs dialogScrollable\n#A responsive drawer panel\n@docs drawerPanel\n#An element that works similarly to a native browser select\n@docs dropdownMenu\n#A material design floating action button\n@docs fab\n#A header and content wrapper for layout with headers\n@docs headerPanel\n#A material design icon button\n@docs iconButton\n#Material design text fields\n@docs input\n#A material-design styled list item\n@docs item, iconItem, itemBody\n#Implements an accessible material design listbox\n@docs listbox\n#A material design container that looks like a lifted sheet of paper\n@docs material\n#Implements an accessible material design menu\n@docs menu\n#A material design element that composes a trigger and a dropdown menu\n@docs menuButton\n#A material design progress bar\n@docs progress\n#A material design radio button\n@docs radioButton\n#A group of material design radio buttons\n@docs radioGroup\n#Adds a material design ripple to any container\n@docs ripple\n#A header bar with scrolling behavior\n@docs scrollHeaderPanel\n#A material design-style slider\n@docs slider\n#A material design spinner\n@docs spinner\n#Common (global) styles for Material Design elements.\n@docs styles\n#Material design tabs\n@docs tabs, tab\n#A material design notification toast\n@docs toast\n#A material design toggle button control\n@docs toggleButton\n#A material design toolbar that is easily customizable\n@docs toolbar\n#Material design tooltip popup for content\n@docs tooltip\n",
    "aliases": [],
    "types": [],
    "values": [
      {
        "name": "badge",
        "comment": " ",
        "type": "List (Html.Attribute msg) -> List (Html.Html msg) -> Html.Html msg"
      },
      {
        "name": "behaviors",
        "comment": " ",
        "type": "List (Html.Attribute msg) -> List (Html.Html msg) -> Html.Html msg"
      },
      {
        "name": "button",
        "comment": " ",
        "type": "List (Html.Attribute msg) -> List (Html.Html msg) -> Html.Html msg"
      },
      {
        "name": "card",
        "comment": " ",
        "type": "List (Html.Attribute msg) -> List (Html.Html msg) -> Html.Html msg"
      },
      {
        "name": "checkbox",
        "comment": " ",
        "type": "List (Html.Attribute msg) -> List (Html.Html msg) -> Html.Html msg"
      },
      {
        "name": "dialog",
        "comment": " ",
        "type": "List (Html.Attribute msg) -> List (Html.Html msg) -> Html.Html msg"
      },
      {
        "name": "dialogBehavior",
        "comment": " ",
        "type": "List (Html.Attribute msg) -> List (Html.Html msg) -> Html.Html msg"
      },
      {
        "name": "dialogScrollable",
        "comment": " ",
        "type": "List (Html.Attribute msg) -> List (Html.Html msg) -> Html.Html msg"
      },
      {
        "name": "drawerPanel",
        "comment": " ",
        "type": "List (Html.Attribute msg) -> List (Html.Html msg) -> Html.Html msg"
      },
      {
        "name": "dropdownMenu",
        "comment": " ",
        "type": "List (Html.Attribute msg) -> List (Html.Html msg) -> Html.Html msg"
      },
      {
        "name": "fab",
        "comment": " ",
        "type": "List (Html.Attribute msg) -> List (Html.Html msg) -> Html.Html msg"
      },
      {
        "name": "headerPanel",
        "comment": " ",
        "type": "List (Html.Attribute msg) -> List (Html.Html msg) -> Html.Html msg"
      },
      {
        "name": "iconButton",
        "comment": " ",
        "type": "List (Html.Attribute msg) -> List (Html.Html msg) -> Html.Html msg"
      },
      {
        "name": "iconItem",
        "comment": " `iconItem` is a convenience element to make an item with icon. It is an interactive list item with a fixed-width icon area, according to Material Design. This is useful if the icons are of varying widths, but you want the item bodies to line up. Use this like a <paper-item>. The child node with the attribute `itemIcon` is placed in the icon area.\n",
        "type": "List (Html.Attribute msg) -> List (Html.Html msg) -> Html.Html msg"
      },
      {
        "name": "input",
        "comment": " ",
        "type": "List (Html.Attribute msg) -> List (Html.Html msg) -> Html.Html msg"
      },
      {
        "name": "item",
        "comment": " Material design: Lists\n\n`item` is an interactive list item. By default, it is a horizontal flexbox.\n",
        "type": "List (Html.Attribute msg) -> List (Html.Html msg) -> Html.Html msg"
      },
      {
        "name": "itemBody",
        "comment": " Use `itemBody` in a `item` or `iconItem` to make two- or three- line items. It is a flex item that is a vertical flexbox.\n",
        "type": "List (Html.Attribute msg) -> List (Html.Html msg) -> Html.Html msg"
      },
      {
        "name": "listbox",
        "comment": " ",
        "type": "List (Html.Attribute msg) -> List (Html.Html msg) -> Html.Html msg"
      },
      {
        "name": "material",
        "comment": " ",
        "type": "List (Html.Attribute msg) -> List (Html.Html msg) -> Html.Html msg"
      },
      {
        "name": "menu",
        "comment": " ",
        "type": "List (Html.Attribute msg) -> List (Html.Html msg) -> Html.Html msg"
      },
      {
        "name": "menuButton",
        "comment": " ",
        "type": "List (Html.Attribute msg) -> List (Html.Html msg) -> Html.Html msg"
      },
      {
        "name": "progress",
        "comment": " ",
        "type": "List (Html.Attribute msg) -> List (Html.Html msg) -> Html.Html msg"
      },
      {
        "name": "radioButton",
        "comment": " ",
        "type": "List (Html.Attribute msg) -> List (Html.Html msg) -> Html.Html msg"
      },
      {
        "name": "radioGroup",
        "comment": " ",
        "type": "List (Html.Attribute msg) -> List (Html.Html msg) -> Html.Html msg"
      },
      {
        "name": "ripple",
        "comment": " ",
        "type": "List (Html.Attribute msg) -> List (Html.Html msg) -> Html.Html msg"
      },
      {
        "name": "scrollHeaderPanel",
        "comment": " ",
        "type": "List (Html.Attribute msg) -> List (Html.Html msg) -> Html.Html msg"
      },
      {
        "name": "slider",
        "comment": " ",
        "type": "List (Html.Attribute msg) -> List (Html.Html msg) -> Html.Html msg"
      },
      {
        "name": "spinner",
        "comment": " ",
        "type": "List (Html.Attribute msg) -> List (Html.Html msg) -> Html.Html msg"
      },
      {
        "name": "styles",
        "comment": " ",
        "type": "List (Html.Attribute msg) -> List (Html.Html msg) -> Html.Html msg"
      },
      {
        "name": "tab",
        "comment": " `tab` is styled to look like a tab. It should be used in conjunction with `tabs`.\n",
        "type": "List (Html.Attribute msg) -> List (Html.Html msg) -> Html.Html msg"
      },
      {
        "name": "tabs",
        "comment": " Material design: Tabs\n\n`tabs` makes it easy to explore and switch between different views or functional aspects of an app, or to browse categorized data sets.\n\nUse selected property to get or set the selected tab.\n",
        "type": "List (Html.Attribute msg) -> List (Html.Html msg) -> Html.Html msg"
      },
      {
        "name": "toast",
        "comment": " ",
        "type": "List (Html.Attribute msg) -> List (Html.Html msg) -> Html.Html msg"
      },
      {
        "name": "toggleButton",
        "comment": " ",
        "type": "List (Html.Attribute msg) -> List (Html.Html msg) -> Html.Html msg"
      },
      {
        "name": "toolbar",
        "comment": " ",
        "type": "List (Html.Attribute msg) -> List (Html.Html msg) -> Html.Html msg"
      },
      {
        "name": "tooltip",
        "comment": " ",
        "type": "List (Html.Attribute msg) -> List (Html.Html msg) -> Html.Html msg"
      }
    ],
    "generated-with-elm-version": "0.17.1"
  },
  {
    "name": "Polymer.Iron",
    "comment": "\n@docs selector\n",
    "aliases": [],
    "types": [],
    "values": [
      {
        "name": "selector",
        "comment": " ",
        "type": "List (Html.Attribute msg) -> List (Html.Html msg) -> Html.Html msg"
      }
    ],
    "generated-with-elm-version": "0.17.1"
  },
  {
    "name": "Polymer.Firebase",
    "comment": "\n@docs app\n",
    "aliases": [],
    "types": [],
    "values": [
      {
        "name": "app",
        "comment": " ",
        "type": "List (Html.Attribute msg) -> List (Html.Html msg) -> Html.Html msg"
      }
    ],
    "generated-with-elm-version": "0.17.1"
  },
  {
    "name": "Polymer.Attributes",
    "comment": "\n@docs attrForSelected\n@docs boolProperty\n@docs icon\n@docs label\n@docs path\n@docs selected\n@docs stringProperty\n",
    "aliases": [],
    "types": [],
    "values": [
      {
        "name": "attrForSelected",
        "comment": " ",
        "type": "String -> Html.Attribute msg"
      },
      {
        "name": "boolProperty",
        "comment": " ",
        "type": "String -> Bool -> Html.Attribute msg"
      },
      {
        "name": "icon",
        "comment": " ",
        "type": "String -> Html.Attribute msg"
      },
      {
        "name": "label",
        "comment": " ",
        "type": "String -> Html.Attribute msg"
      },
      {
        "name": "path",
        "comment": " ",
        "type": "String -> Html.Attribute msg"
      },
      {
        "name": "selected",
        "comment": " ",
        "type": "String -> Html.Attribute msg"
      },
      {
        "name": "stringProperty",
        "comment": " ",
        "type": "String -> String -> Html.Attribute msg"
      }
    ],
    "generated-with-elm-version": "0.17.1"
  },
  {
    "name": "Polymer.Events",
    "comment": "\n@docs onIronSelect\n@docs onSelectedChanged\n@docs onTap\n@docs onValueChanged\n",
    "aliases": [],
    "types": [],
    "values": [
      {
        "name": "onIronSelect",
        "comment": " ",
        "type": "(String -> Result.Result String a) -> (a -> msg) -> Html.Attribute msg"
      },
      {
        "name": "onSelectedChanged",
        "comment": " ",
        "type": "(String -> msg) -> Html.Attribute msg"
      },
      {
        "name": "onTap",
        "comment": " ",
        "type": "msg -> Html.Attribute msg"
      },
      {
        "name": "onValueChanged",
        "comment": " ",
        "type": "(String -> msg) -> Html.Attribute msg"
      }
    ],
    "generated-with-elm-version": "0.17.1"
  }
]