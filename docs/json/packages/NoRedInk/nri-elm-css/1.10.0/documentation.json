[
  {
    "name": "Nri.Stylers",
    "comment": " Helper module for working with fonts\n\n@docs makeFont\n\n",
    "aliases": [],
    "types": [],
    "values": [
      {
        "name": "makeFont",
        "comment": "\ntakes a size and a color and creates a font\n",
        "type": "Css.FontSize a -> Css.ColorValue b -> Css.Mixin"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Nri.Css.Extra",
    "comment": " Put helper functions, properties, mixins, and anything else that might be missing from elm-css. If it gets used enough and the use case is in the scope of elm-css, we can open PRs/Issues to discuss or add the features to that package.\n\n@docs lineHeightNum\n\n",
    "aliases": [],
    "types": [],
    "values": [
      {
        "name": "lineHeightNum",
        "comment": " Use a Css.Num value for line height\n",
        "type": "Float -> Css.Mixin"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Nri.Fonts",
    "comment": " Fonts for NoRedInk projects\n\n@docs baseFont, quizFont, indieFlowerFont, rubikFont\n\n",
    "aliases": [],
    "types": [],
    "values": [
      {
        "name": "baseFont",
        "comment": " Font for instructions, headers, and pretty much everything else\n",
        "type": "Css.Mixin"
      },
      {
        "name": "indieFlowerFont",
        "comment": " Font for accents\n",
        "type": "Css.Mixin"
      },
      {
        "name": "quizFont",
        "comment": " Font for question sentences, or most interactable or graded fields\n",
        "type": "Css.Mixin"
      },
      {
        "name": "rubikFont",
        "comment": " Font for instructions, headers, and pretty much everything else\n",
        "type": "Css.Mixin"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Nri.Colors",
    "comment": " Helper module for working with colors\n\n@docs black, blue, blueDark, blueDark5, blueDark70, blueDeep, blueLighter, coral, coralLighter, coralLightest, gray, grayDark, grayDarker, grayLighter, grayLightest, green, greenLighter, greenLightest, highlightLightBlue, highlightLightMagenta, highlightLightYellow, highlightSolidBlue, highlightSolidMagenta, highlightSolidYellow, linkBlue, linkBlueMed, orange, orangeDark, orangeLighter, purple, purpleLighter, purpleLightest, turquoise, turquoiseLighter, turquoiseLightest, white, yellowDark\n\n",
    "aliases": [],
    "types": [],
    "values": [
      {
        "name": "black",
        "comment": " black\n",
        "type": "Css.Color"
      },
      {
        "name": "blue",
        "comment": " blue\n",
        "type": "Css.Color"
      },
      {
        "name": "blueDark",
        "comment": " blueDark\n",
        "type": "Css.Color"
      },
      {
        "name": "blueDark5",
        "comment": " blueDark5\n",
        "type": "Css.Color"
      },
      {
        "name": "blueDark70",
        "comment": " blueDark70\n",
        "type": "Css.Color"
      },
      {
        "name": "blueDeep",
        "comment": " blueDeep\nkind of a navy-ish blue\n",
        "type": "Css.Color"
      },
      {
        "name": "blueLighter",
        "comment": " blueLighter\n",
        "type": "Css.Color"
      },
      {
        "name": "coral",
        "comment": " coral\n",
        "type": "Css.Color"
      },
      {
        "name": "coralLighter",
        "comment": " coralLighter\n",
        "type": "Css.Color"
      },
      {
        "name": "coralLightest",
        "comment": " coralLightest\n",
        "type": "Css.Color"
      },
      {
        "name": "gray",
        "comment": " gray\n",
        "type": "Css.Color"
      },
      {
        "name": "grayDark",
        "comment": " grayDark\n",
        "type": "Css.Color"
      },
      {
        "name": "grayDarker",
        "comment": " grayDarker\n",
        "type": "Css.Color"
      },
      {
        "name": "grayLighter",
        "comment": " grayLighter\n",
        "type": "Css.Color"
      },
      {
        "name": "grayLightest",
        "comment": " grayLightest\n",
        "type": "Css.Color"
      },
      {
        "name": "green",
        "comment": " green\n",
        "type": "Css.Color"
      },
      {
        "name": "greenLighter",
        "comment": " greenLighter\n",
        "type": "Css.Color"
      },
      {
        "name": "greenLightest",
        "comment": " greenLightest\n",
        "type": "Css.Color"
      },
      {
        "name": "highlightLightBlue",
        "comment": " highlightLightBlue\n",
        "type": "Css.Color"
      },
      {
        "name": "highlightLightMagenta",
        "comment": " highlightLightMagenta\n",
        "type": "Css.Color"
      },
      {
        "name": "highlightLightYellow",
        "comment": " highlightLightYellow\n",
        "type": "Css.Color"
      },
      {
        "name": "highlightSolidBlue",
        "comment": " highlightSolidBlue\n",
        "type": "Css.Color"
      },
      {
        "name": "highlightSolidMagenta",
        "comment": " highlightSolidMagenta\n",
        "type": "Css.Color"
      },
      {
        "name": "highlightSolidYellow",
        "comment": " highlightSolidYellow\n",
        "type": "Css.Color"
      },
      {
        "name": "linkBlue",
        "comment": " linkBlue\n",
        "type": "Css.Color"
      },
      {
        "name": "linkBlueMed",
        "comment": " linkBlueMed\n",
        "type": "Css.Color"
      },
      {
        "name": "orange",
        "comment": " orange\n",
        "type": "Css.Color"
      },
      {
        "name": "orangeDark",
        "comment": " orangeDark\n",
        "type": "Css.Color"
      },
      {
        "name": "orangeLighter",
        "comment": " orangeLighter\n",
        "type": "Css.Color"
      },
      {
        "name": "purple",
        "comment": " purple\n",
        "type": "Css.Color"
      },
      {
        "name": "purpleLighter",
        "comment": " purpleLighter\n",
        "type": "Css.Color"
      },
      {
        "name": "purpleLightest",
        "comment": " purpleLightest\n",
        "type": "Css.Color"
      },
      {
        "name": "turquoise",
        "comment": " turquoise\n",
        "type": "Css.Color"
      },
      {
        "name": "turquoiseLighter",
        "comment": " turquoiseLighter\n",
        "type": "Css.Color"
      },
      {
        "name": "turquoiseLightest",
        "comment": " turquoiseLightest\n",
        "type": "Css.Color"
      },
      {
        "name": "white",
        "comment": " white\n",
        "type": "Css.Color"
      },
      {
        "name": "yellowDark",
        "comment": " yellowDark\n",
        "type": "Css.Color"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Nri",
    "comment": " A collection of helpers for working with NoRedInk projects\n@docs name\n",
    "aliases": [],
    "types": [],
    "values": [
      {
        "name": "name",
        "comment": " NoRedInk's name!\n",
        "type": "String"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Nri.Accessibility",
    "comment": " Helper module for functions that make it easier to write accessible code.\n    Role, aria, label-related helpers, color-fallbacks, etc.\n\n@docs invisibleText\n\n",
    "aliases": [],
    "types": [],
    "values": [
      {
        "name": "invisibleText",
        "comment": "\ninvisibleText is most frequently useful on labels.\n\nFor instance, if there's an input element with a placeholder,\nsomeone on a screenreader would miss the content of that placeholder.\n\nWith invisibleText, we can avoid redundancy across visible label\nand placeholder, but maintain semantic meaning of the input for other users.\n",
        "type": "Css.Mixin"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  }
]