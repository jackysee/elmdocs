[
  {
    "name": "SimplePortProgram",
    "comment": " Create simple programs for arbitrary JavaScript interoperation.\n\nDeprecated as of Elm 0.18.0 thanks to Platform.program effectively doing the same thing.\n\nFor Elm 0.18.0, instead see our [Port Program Examples](https://github.com/Pilatch/elm-port-program-examples).\n\nGreat for beginners who want to quickly try out ports and get their\nElm code executing in any JavaScript environment.\n\nUseful for large codebases too where you don't want to replace your\ntemplating, data-binding, and/or HTML rendering, and you just want\nthe safety that Elm provides.\n\nWe have a [silly example](https://github.com/Pilatch/elm-simple-port-program/tree/master/examples/input-mangler)\nthat was specifically written to help new Elm users understand the\nbare minimum of what's necessary to make Elm interoperate with JS.\nIt's the \"Input Mangler,\" a NodeJS script that takes whatever the user\nwrites into standard input, sends that to Elm, which then sends back a\nmodified version of that text to Node again to be displayed on standard out.\n\n[See how SimplePortProgram is used from Elm](https://github.com/Pilatch/elm-simple-port-program/blob/master/examples/input-mangler/Main.elm).\n\nThen you can [see how it could be included in NodeJS](https://github.com/Pilatch/elm-simple-port-program/blob/master/examples/input-mangler/input-mangler.js).\n\n\n# Start a Simple Program\n@docs simpleProgram\n\n",
    "aliases": [],
    "types": [],
    "values": [
      {
        "name": "simpleProgram",
        "comment": " Create the simplest program for interoperation with JavaScript in any setting,\nwhether a browser or NodeJS. All it requires is something that acts upon messages\ncoming in from JavaScript, and subscriptions from JavaScript that provide those\nmessages.\n",
        "type": "(msg -> Platform.Cmd.Cmd msg) -> Platform.Sub.Sub msg -> Platform.Program Basics.Never"
      }
    ],
    "generated-with-elm-version": "0.17.1"
  }
]