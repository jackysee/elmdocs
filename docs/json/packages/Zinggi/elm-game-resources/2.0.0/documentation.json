[
  {
    "name": "Game.Resources",
    "comment": "\nA module for managing resources needed for games.\nThis currently only manages textures, but a future version might add sounds, 3d-meshes etc..\n\nSuggested import:\n\n    import Game.Resources as Resources exposing (Resources)\n\n# Usage\nAdd `resources` to your `initialModel`:\n\n    initialModel =\n        { ..\n        , resources = Resources.init\n        }\n\nAdd the resources message to your `Msg`\n\n    type Msg\n        = ..\n        | Resources Resources.Msg\n\nLoad textures at `init`:\n\n    init =\n        initialModel\n            ! [ Resources.loadTextures [ \"images/box.png\" ]\n                    |> Cmd.map Resources\n              ]\n\nAdd a case for the `Resources.Msg` in `update`\n\n    Resources msg ->\n        { model | resources = Resources.update msg model.resources } ! []\n\nRequest your texture when you need it\n\n    Resources.getTexture \"images/box.png\" resources\n\n\n# Resources\n@docs Resources, init, update, Msg\n\n## Textures\n@docs loadTextures, getTexture\n\n@docs loadTexturesWithConfig, LoadTextureConfig\n",
    "aliases": [
      {
        "name": "LoadTextureConfig",
        "comment": " ",
        "args": [
          "msg"
        ],
        "type": "{ success : Game.Resources.Msg -> msg, failed : String -> msg }"
      }
    ],
    "types": [
      {
        "name": "Msg",
        "comment": " ",
        "args": [],
        "cases": []
      },
      {
        "name": "Resources",
        "comment": "\nThe main type of this library\n",
        "args": [],
        "cases": []
      }
    ],
    "values": [
      {
        "name": "getTexture",
        "comment": "\nReturns a maybe as the texture might not be loaded yet.\n",
        "type": "String -> Game.Resources.Resources -> Maybe.Maybe WebGL.Texture.Texture"
      },
      {
        "name": "init",
        "comment": " ",
        "type": "Game.Resources.Resources"
      },
      {
        "name": "loadTextures",
        "comment": "\nLoads a list of textures from the given urls.\nPNGs and JPEGs are known to work.\nFor WebGL make sure that your textures have a dimension with a power of two, e.g. 2^n x 2^m\n",
        "type": "List String -> Platform.Cmd.Cmd Game.Resources.Msg"
      },
      {
        "name": "loadTexturesWithConfig",
        "comment": "\nSame as loadTextures, but gives you more control\nby being able to react to a texture loading error\nand by specifying a texture filter.\n\n    loadTexturesWithConfig\n        { success = Resources\n        , failed = LoadingTextureFailed\n        }\n        [ (linear, \"images/blob.png\"), (nearest, \"images/box.jpeg\") ]\n\n",
        "type": "Game.Resources.LoadTextureConfig msg -> List ( WebGL.Texture.Options, String ) -> Platform.Cmd.Cmd msg"
      },
      {
        "name": "update",
        "comment": "\n",
        "type": "Game.Resources.Msg -> Game.Resources.Resources -> Game.Resources.Resources"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  }
]