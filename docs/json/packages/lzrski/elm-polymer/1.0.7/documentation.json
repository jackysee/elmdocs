[
  {
    "name": "Polymer.Paper.Spinner.Attributes",
    "comment": " Attributes from component. See <https://www.webcomponents.org/element/PolymerElements/>\n\n\n# Attributes\n\n@docs active, alt\n\n",
    "aliases": [],
    "types": [],
    "values": [
      {
        "name": "active",
        "comment": " TODO: Description of active attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "alt",
        "comment": " TODO: Description of alt attribute\n",
        "type": "String -> Html.Attribute msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Polymer.Paper.Tabs.Attributes",
    "comment": " Attributes from component. See <https://www.webcomponents.org/element/PolymerElements/>\n\n\n# Attributes\n\n@docs activateEvent, active, alignBottom, ariaActiveAttribute, attrForItemTitle, attrForSelected, autoselect, autoselectDelay, disableDrag, disabled, fallbackSelection, fitContainer, focused, hideScrollButtons, link, multi, noBar, noSlide, noink, pointerDown, pressed, receivedFocusFromKeyboard, scrollable, selectable, selectedAttribute, selectedClass, stopKeyboardEventPropagation, toggles\n\n",
    "aliases": [],
    "types": [],
    "values": [
      {
        "name": "activateEvent",
        "comment": " TODO: Description of activate-event attribute\n",
        "type": "String -> Html.Attribute msg"
      },
      {
        "name": "active",
        "comment": " TODO: Description of active attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "alignBottom",
        "comment": " TODO: Description of align-bottom attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "ariaActiveAttribute",
        "comment": " TODO: Description of aria-active-attribute attribute\n",
        "type": "String -> Html.Attribute msg"
      },
      {
        "name": "attrForItemTitle",
        "comment": " TODO: Description of attr-for-item-title attribute\n",
        "type": "String -> Html.Attribute msg"
      },
      {
        "name": "attrForSelected",
        "comment": " TODO: Description of attr-for-selected attribute\n",
        "type": "String -> Html.Attribute msg"
      },
      {
        "name": "autoselect",
        "comment": " TODO: Description of autoselect attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "autoselectDelay",
        "comment": " TODO: Description of autoselect-delay attribute\n",
        "type": "Float -> Html.Attribute msg"
      },
      {
        "name": "disableDrag",
        "comment": " TODO: Description of disable-drag attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "disabled",
        "comment": " TODO: Description of disabled attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "fallbackSelection",
        "comment": " TODO: Description of fallback-selection attribute\n",
        "type": "String -> Html.Attribute msg"
      },
      {
        "name": "fitContainer",
        "comment": " TODO: Description of fit-container attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "focused",
        "comment": " TODO: Description of focused attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "hideScrollButtons",
        "comment": " TODO: Description of hide-scroll-buttons attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "link",
        "comment": " TODO: Description of link attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "multi",
        "comment": " TODO: Description of multi attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "noBar",
        "comment": " TODO: Description of no-bar attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "noSlide",
        "comment": " TODO: Description of no-slide attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "noink",
        "comment": " TODO: Description of noink attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "pointerDown",
        "comment": " TODO: Description of pointer-down attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "pressed",
        "comment": " TODO: Description of pressed attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "receivedFocusFromKeyboard",
        "comment": " TODO: Description of received-focus-from-keyboard attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "scrollable",
        "comment": " TODO: Description of scrollable attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "selectable",
        "comment": " TODO: Description of selectable attribute\n",
        "type": "String -> Html.Attribute msg"
      },
      {
        "name": "selectedAttribute",
        "comment": " TODO: Description of selected-attribute attribute\n",
        "type": "String -> Html.Attribute msg"
      },
      {
        "name": "selectedClass",
        "comment": " TODO: Description of selected-class attribute\n",
        "type": "String -> Html.Attribute msg"
      },
      {
        "name": "stopKeyboardEventPropagation",
        "comment": " TODO: Description of stop-keyboard-event-propagation attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "toggles",
        "comment": " TODO: Description of toggles attribute\n",
        "type": "Bool -> Html.Attribute msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Polymer.Paper.Input.Attributes",
    "comment": " Attributes from component. See <https://www.webcomponents.org/element/PolymerElements/>\n\n\n# Attributes\n\n@docs accept, allowedPattern, alwaysFloatLabel, attrForValue, autoValidate, autocapitalize, autocomplete, autocorrect, autofocus, autosave, charCounter, disabled, errorMessage, focused, inputmode, invalid, label, list, max, maxRows, maxlength, min, minlength, multiple, name, noLabelFloat, pattern, placeholder, readonly, required, results, rows, size, step, stopKeyboardEventPropagation, type_, validator, value\n\n",
    "aliases": [],
    "types": [],
    "values": [
      {
        "name": "accept",
        "comment": " TODO: Description of accept attribute\n",
        "type": "String -> Html.Attribute msg"
      },
      {
        "name": "allowedPattern",
        "comment": " TODO: Description of allowed-pattern attribute\n",
        "type": "String -> Html.Attribute msg"
      },
      {
        "name": "alwaysFloatLabel",
        "comment": " TODO: Description of always-float-label attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "attrForValue",
        "comment": " TODO: Description of attr-for-value attribute\n",
        "type": "String -> Html.Attribute msg"
      },
      {
        "name": "autoValidate",
        "comment": " TODO: Description of auto-validate attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "autocapitalize",
        "comment": " TODO: Description of autocapitalize attribute\n",
        "type": "String -> Html.Attribute msg"
      },
      {
        "name": "autocomplete",
        "comment": " TODO: Description of autocomplete attribute\n",
        "type": "String -> Html.Attribute msg"
      },
      {
        "name": "autocorrect",
        "comment": " TODO: Description of autocorrect attribute\n",
        "type": "String -> Html.Attribute msg"
      },
      {
        "name": "autofocus",
        "comment": " TODO: Description of autofocus attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "autosave",
        "comment": " TODO: Description of autosave attribute\n",
        "type": "String -> Html.Attribute msg"
      },
      {
        "name": "charCounter",
        "comment": " TODO: Description of char-counter attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "disabled",
        "comment": " TODO: Description of disabled attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "errorMessage",
        "comment": " TODO: Description of error-message attribute\n",
        "type": "String -> Html.Attribute msg"
      },
      {
        "name": "focused",
        "comment": " TODO: Description of focused attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "inputmode",
        "comment": " TODO: Description of inputmode attribute\n",
        "type": "String -> Html.Attribute msg"
      },
      {
        "name": "invalid",
        "comment": " TODO: Description of invalid attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "label",
        "comment": " TODO: Description of label attribute\n",
        "type": "String -> Html.Attribute msg"
      },
      {
        "name": "list",
        "comment": " TODO: Description of list attribute\n",
        "type": "String -> Html.Attribute msg"
      },
      {
        "name": "max",
        "comment": " TODO: Description of max attribute\n",
        "type": "String -> Html.Attribute msg"
      },
      {
        "name": "maxRows",
        "comment": " TODO: Description of max-rows attribute\n",
        "type": "Float -> Html.Attribute msg"
      },
      {
        "name": "maxlength",
        "comment": " TODO: Description of maxlength attribute\n",
        "type": "Float -> Html.Attribute msg"
      },
      {
        "name": "min",
        "comment": " TODO: Description of min attribute\n",
        "type": "String -> Html.Attribute msg"
      },
      {
        "name": "minlength",
        "comment": " TODO: Description of minlength attribute\n",
        "type": "Float -> Html.Attribute msg"
      },
      {
        "name": "multiple",
        "comment": " TODO: Description of multiple attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "name",
        "comment": " TODO: Description of name attribute\n",
        "type": "String -> Html.Attribute msg"
      },
      {
        "name": "noLabelFloat",
        "comment": " TODO: Description of no-label-float attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "pattern",
        "comment": " TODO: Description of pattern attribute\n",
        "type": "String -> Html.Attribute msg"
      },
      {
        "name": "placeholder",
        "comment": " TODO: Description of placeholder attribute\n",
        "type": "String -> Html.Attribute msg"
      },
      {
        "name": "readonly",
        "comment": " TODO: Description of readonly attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "required",
        "comment": " TODO: Description of required attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "results",
        "comment": " TODO: Description of results attribute\n",
        "type": "Float -> Html.Attribute msg"
      },
      {
        "name": "rows",
        "comment": " TODO: Description of rows attribute\n",
        "type": "Float -> Html.Attribute msg"
      },
      {
        "name": "size",
        "comment": " TODO: Description of size attribute\n",
        "type": "Float -> Html.Attribute msg"
      },
      {
        "name": "step",
        "comment": " TODO: Description of step attribute\n",
        "type": "String -> Html.Attribute msg"
      },
      {
        "name": "stopKeyboardEventPropagation",
        "comment": " TODO: Description of stop-keyboard-event-propagation attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "type_",
        "comment": " TODO: Description of type attribute\n",
        "type": "String -> Html.Attribute msg"
      },
      {
        "name": "validator",
        "comment": " TODO: Description of validator attribute\n",
        "type": "String -> Html.Attribute msg"
      },
      {
        "name": "value",
        "comment": " TODO: Description of value attribute\n",
        "type": "String -> Html.Attribute msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Polymer.Paper.Listbox.Attributes",
    "comment": " Attributes from component. See <https://www.webcomponents.org/element/PolymerElements/>\n\n\n# Attributes\n\n@docs activateEvent, attrForItemTitle, attrForSelected, disabled, fallbackSelection, multi, selectable, selectedAttribute, selectedClass, stopKeyboardEventPropagation\n\n",
    "aliases": [],
    "types": [],
    "values": [
      {
        "name": "activateEvent",
        "comment": " TODO: Description of activate-event attribute\n",
        "type": "String -> Html.Attribute msg"
      },
      {
        "name": "attrForItemTitle",
        "comment": " TODO: Description of attr-for-item-title attribute\n",
        "type": "String -> Html.Attribute msg"
      },
      {
        "name": "attrForSelected",
        "comment": " TODO: Description of attr-for-selected attribute\n",
        "type": "String -> Html.Attribute msg"
      },
      {
        "name": "disabled",
        "comment": " TODO: Description of disabled attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "fallbackSelection",
        "comment": " TODO: Description of fallback-selection attribute\n",
        "type": "String -> Html.Attribute msg"
      },
      {
        "name": "multi",
        "comment": " TODO: Description of multi attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "selectable",
        "comment": " TODO: Description of selectable attribute\n",
        "type": "String -> Html.Attribute msg"
      },
      {
        "name": "selectedAttribute",
        "comment": " TODO: Description of selected-attribute attribute\n",
        "type": "String -> Html.Attribute msg"
      },
      {
        "name": "selectedClass",
        "comment": " TODO: Description of selected-class attribute\n",
        "type": "String -> Html.Attribute msg"
      },
      {
        "name": "stopKeyboardEventPropagation",
        "comment": " TODO: Description of stop-keyboard-event-propagation attribute\n",
        "type": "Bool -> Html.Attribute msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Polymer.Paper.Slider.Attributes",
    "comment": " Attributes from component. See <https://www.webcomponents.org/element/PolymerElements/>\n\n\n# Attributes\n\n@docs active, ariaActiveAttribute, disabled, dragging, editable, expand, focused, immediateValue, max, maxMarkers, min, name, noink, pin, pointerDown, pressed, ratio, receivedFocusFromKeyboard, required, secondaryProgress, snaps, step, stopKeyboardEventPropagation, toggles, transiting, value\n\n",
    "aliases": [],
    "types": [],
    "values": [
      {
        "name": "active",
        "comment": " TODO: Description of active attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "ariaActiveAttribute",
        "comment": " TODO: Description of aria-active-attribute attribute\n",
        "type": "String -> Html.Attribute msg"
      },
      {
        "name": "disabled",
        "comment": " TODO: Description of disabled attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "dragging",
        "comment": " TODO: Description of dragging attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "editable",
        "comment": " TODO: Description of editable attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "expand",
        "comment": " TODO: Description of expand attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "focused",
        "comment": " TODO: Description of focused attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "immediateValue",
        "comment": " TODO: Description of immediate-value attribute\n",
        "type": "Float -> Html.Attribute msg"
      },
      {
        "name": "max",
        "comment": " TODO: Description of max attribute\n",
        "type": "Float -> Html.Attribute msg"
      },
      {
        "name": "maxMarkers",
        "comment": " TODO: Description of max-markers attribute\n",
        "type": "Float -> Html.Attribute msg"
      },
      {
        "name": "min",
        "comment": " TODO: Description of min attribute\n",
        "type": "Float -> Html.Attribute msg"
      },
      {
        "name": "name",
        "comment": " TODO: Description of name attribute\n",
        "type": "String -> Html.Attribute msg"
      },
      {
        "name": "noink",
        "comment": " TODO: Description of noink attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "pin",
        "comment": " TODO: Description of pin attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "pointerDown",
        "comment": " TODO: Description of pointer-down attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "pressed",
        "comment": " TODO: Description of pressed attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "ratio",
        "comment": " TODO: Description of ratio attribute\n",
        "type": "Float -> Html.Attribute msg"
      },
      {
        "name": "receivedFocusFromKeyboard",
        "comment": " TODO: Description of received-focus-from-keyboard attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "required",
        "comment": " TODO: Description of required attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "secondaryProgress",
        "comment": " TODO: Description of secondary-progress attribute\n",
        "type": "Float -> Html.Attribute msg"
      },
      {
        "name": "snaps",
        "comment": " TODO: Description of snaps attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "step",
        "comment": " TODO: Description of step attribute\n",
        "type": "Float -> Html.Attribute msg"
      },
      {
        "name": "stopKeyboardEventPropagation",
        "comment": " TODO: Description of stop-keyboard-event-propagation attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "toggles",
        "comment": " TODO: Description of toggles attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "transiting",
        "comment": " TODO: Description of transiting attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "value",
        "comment": " TODO: Description of value attribute\n",
        "type": "Float -> Html.Attribute msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Polymer.Paper.Tooltip.Attributes",
    "comment": " Attributes from component. See <https://www.webcomponents.org/element/PolymerElements/>\n\n\n# Attributes\n\n@docs animationDelay, entryAnimation, exitAnimation, fitToVisibleBounds, for, manualMode, marginTop, offset, position\n\n",
    "aliases": [],
    "types": [],
    "values": [
      {
        "name": "animationDelay",
        "comment": " TODO: Description of animation-delay attribute\n",
        "type": "Float -> Html.Attribute msg"
      },
      {
        "name": "entryAnimation",
        "comment": " TODO: Description of entry-animation attribute\n",
        "type": "String -> Html.Attribute msg"
      },
      {
        "name": "exitAnimation",
        "comment": " TODO: Description of exit-animation attribute\n",
        "type": "String -> Html.Attribute msg"
      },
      {
        "name": "fitToVisibleBounds",
        "comment": " TODO: Description of fit-to-visible-bounds attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "for",
        "comment": " TODO: Description of for attribute\n",
        "type": "String -> Html.Attribute msg"
      },
      {
        "name": "manualMode",
        "comment": " TODO: Description of manual-mode attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "marginTop",
        "comment": " TODO: Description of margin-top attribute\n",
        "type": "Float -> Html.Attribute msg"
      },
      {
        "name": "offset",
        "comment": " TODO: Description of offset attribute\n",
        "type": "Float -> Html.Attribute msg"
      },
      {
        "name": "position",
        "comment": " TODO: Description of position attribute\n",
        "type": "String -> Html.Attribute msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Polymer.App.Layout.Attributes",
    "comment": " Attributes from component. See <https://www.webcomponents.org/element/PolymerElements/>\n\n\n# Attributes\n\n@docs align, disabled, condenses, disableSwipe, effects, fixed, forceNarrow, hasScrollingRegion, narrow, noFocusTrap, opened, openedWhenNarrow, persistent, position, responsiveWidth, reveals, shadow, swipeOpen, threshold, thresholdTriggered, transitionDuration\n\n",
    "aliases": [],
    "types": [],
    "values": [
      {
        "name": "align",
        "comment": " TODO: Description of align attribute\n",
        "type": "String -> Html.Attribute msg"
      },
      {
        "name": "condenses",
        "comment": " TODO: Description of condenses attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "disableSwipe",
        "comment": " TODO: Description of disable-swipe attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "disabled",
        "comment": " TODO: Description of disabled attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "effects",
        "comment": " TODO: Description of effects attribute\n",
        "type": "String -> Html.Attribute msg"
      },
      {
        "name": "fixed",
        "comment": " TODO: Description of fixed attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "forceNarrow",
        "comment": " TODO: Description of force-narrow attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "hasScrollingRegion",
        "comment": " TODO: Description of has-scrolling-region attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "narrow",
        "comment": " TODO: Description of narrow attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "noFocusTrap",
        "comment": " TODO: Description of no-focus-trap attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "opened",
        "comment": " TODO: Description of opened attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "openedWhenNarrow",
        "comment": " TODO: Description of opened-when-narrow attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "persistent",
        "comment": " TODO: Description of persistent attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "position",
        "comment": " TODO: Description of position attribute\n",
        "type": "String -> Html.Attribute msg"
      },
      {
        "name": "responsiveWidth",
        "comment": " TODO: Description of responsive-width attribute\n",
        "type": "String -> Html.Attribute msg"
      },
      {
        "name": "reveals",
        "comment": " TODO: Description of reveals attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "shadow",
        "comment": " TODO: Description of shadow attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "swipeOpen",
        "comment": " TODO: Description of swipe-open attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "threshold",
        "comment": " TODO: Description of threshold attribute\n",
        "type": "Float -> Html.Attribute msg"
      },
      {
        "name": "thresholdTriggered",
        "comment": " TODO: Description of threshold-triggered attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "transitionDuration",
        "comment": " TODO: Description of transition-duration attribute\n",
        "type": "Float -> Html.Attribute msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Polymer.Paper.Toolbar.Attributes",
    "comment": " Attributes from component. See <https://www.webcomponents.org/element/PolymerElements/>\n\n\n# Attributes\n\n@docs bottomJustify, justify, middleJustify\n\n",
    "aliases": [],
    "types": [],
    "values": [
      {
        "name": "bottomJustify",
        "comment": " TODO: Description of bottom-justify attribute\n",
        "type": "String -> Html.Attribute msg"
      },
      {
        "name": "justify",
        "comment": " TODO: Description of justify attribute\n",
        "type": "String -> Html.Attribute msg"
      },
      {
        "name": "middleJustify",
        "comment": " TODO: Description of middle-justify attribute\n",
        "type": "String -> Html.Attribute msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Polymer.Paper.Badge.Attributes",
    "comment": " Attributes from component. See <https://www.webcomponents.org/element/PolymerElements/>\n\n\n# Attributes\n\n@docs for, icon, label\n\n",
    "aliases": [],
    "types": [],
    "values": [
      {
        "name": "for",
        "comment": " TODO: Description of for attribute\n",
        "type": "String -> Html.Attribute msg"
      },
      {
        "name": "icon",
        "comment": " TODO: Description of icon attribute\n",
        "type": "String -> Html.Attribute msg"
      },
      {
        "name": "label",
        "comment": " TODO: Description of label attribute\n",
        "type": "String -> Html.Attribute msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Polymer.Paper.IconButton.Attributes",
    "comment": " Attributes from component. See <https://www.webcomponents.org/element/PolymerElements/>\n\n\n# Attributes\n\n@docs active, alt, ariaActiveAttribute, disabled, focused, icon, noink, pointerDown, pressed, receivedFocusFromKeyboard, src, stopKeyboardEventPropagation, toggles\n\n",
    "aliases": [],
    "types": [],
    "values": [
      {
        "name": "active",
        "comment": " TODO: Description of active attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "alt",
        "comment": " TODO: Description of alt attribute\n",
        "type": "String -> Html.Attribute msg"
      },
      {
        "name": "ariaActiveAttribute",
        "comment": " TODO: Description of aria-active-attribute attribute\n",
        "type": "String -> Html.Attribute msg"
      },
      {
        "name": "disabled",
        "comment": " TODO: Description of disabled attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "focused",
        "comment": " TODO: Description of focused attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "icon",
        "comment": " TODO: Description of icon attribute\n",
        "type": "String -> Html.Attribute msg"
      },
      {
        "name": "noink",
        "comment": " TODO: Description of noink attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "pointerDown",
        "comment": " TODO: Description of pointer-down attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "pressed",
        "comment": " TODO: Description of pressed attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "receivedFocusFromKeyboard",
        "comment": " TODO: Description of received-focus-from-keyboard attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "src",
        "comment": " TODO: Description of src attribute\n",
        "type": "String -> Html.Attribute msg"
      },
      {
        "name": "stopKeyboardEventPropagation",
        "comment": " TODO: Description of stop-keyboard-event-propagation attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "toggles",
        "comment": " TODO: Description of toggles attribute\n",
        "type": "Bool -> Html.Attribute msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Polymer.Paper.Progress.Attributes",
    "comment": " Attributes from component. See <https://www.webcomponents.org/element/PolymerElements/>\n\n\n# Attributes\n\n@docs disabled, indeterminate, max, min, ratio, secondaryProgress, secondaryRatio, step, value\n\n",
    "aliases": [],
    "types": [],
    "values": [
      {
        "name": "disabled",
        "comment": " TODO: Description of disabled attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "indeterminate",
        "comment": " TODO: Description of indeterminate attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "max",
        "comment": " TODO: Description of max attribute\n",
        "type": "Float -> Html.Attribute msg"
      },
      {
        "name": "min",
        "comment": " TODO: Description of min attribute\n",
        "type": "Float -> Html.Attribute msg"
      },
      {
        "name": "ratio",
        "comment": " TODO: Description of ratio attribute\n",
        "type": "Float -> Html.Attribute msg"
      },
      {
        "name": "secondaryProgress",
        "comment": " TODO: Description of secondary-progress attribute\n",
        "type": "Float -> Html.Attribute msg"
      },
      {
        "name": "secondaryRatio",
        "comment": " TODO: Description of secondary-ratio attribute\n",
        "type": "Float -> Html.Attribute msg"
      },
      {
        "name": "step",
        "comment": " TODO: Description of step attribute\n",
        "type": "Float -> Html.Attribute msg"
      },
      {
        "name": "value",
        "comment": " TODO: Description of value attribute\n",
        "type": "Float -> Html.Attribute msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Polymer.Paper.Item.Attributes",
    "comment": " Attributes from component. See <https://www.webcomponents.org/element/PolymerElements/>\n\n\n# Attributes\n\n@docs active, ariaActiveAttribute, disabled, focused, pointerDown, pressed, receivedFocusFromKeyboard, stopKeyboardEventPropagation, toggles\n\n",
    "aliases": [],
    "types": [],
    "values": [
      {
        "name": "active",
        "comment": " TODO: Description of active attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "ariaActiveAttribute",
        "comment": " TODO: Description of aria-active-attribute attribute\n",
        "type": "String -> Html.Attribute msg"
      },
      {
        "name": "disabled",
        "comment": " TODO: Description of disabled attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "focused",
        "comment": " TODO: Description of focused attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "pointerDown",
        "comment": " TODO: Description of pointer-down attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "pressed",
        "comment": " TODO: Description of pressed attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "receivedFocusFromKeyboard",
        "comment": " TODO: Description of received-focus-from-keyboard attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "stopKeyboardEventPropagation",
        "comment": " TODO: Description of stop-keyboard-event-propagation attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "toggles",
        "comment": " TODO: Description of toggles attribute\n",
        "type": "Bool -> Html.Attribute msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Polymer.Paper.RadioButton.Attributes",
    "comment": " Attributes from component. See <https://www.webcomponents.org/element/PolymerElements/>\n\n\n# Attributes\n\n@docs active, ariaActiveAttribute, checked, disabled, focused, invalid, name, noink, pointerDown, pressed, receivedFocusFromKeyboard, required, stopKeyboardEventPropagation, toggles, validator, value\n\n",
    "aliases": [],
    "types": [],
    "values": [
      {
        "name": "active",
        "comment": " TODO: Description of active attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "ariaActiveAttribute",
        "comment": " TODO: Description of aria-active-attribute attribute\n",
        "type": "String -> Html.Attribute msg"
      },
      {
        "name": "checked",
        "comment": " TODO: Description of checked attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "disabled",
        "comment": " TODO: Description of disabled attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "focused",
        "comment": " TODO: Description of focused attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "invalid",
        "comment": " TODO: Description of invalid attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "name",
        "comment": " TODO: Description of name attribute\n",
        "type": "String -> Html.Attribute msg"
      },
      {
        "name": "noink",
        "comment": " TODO: Description of noink attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "pointerDown",
        "comment": " TODO: Description of pointer-down attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "pressed",
        "comment": " TODO: Description of pressed attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "receivedFocusFromKeyboard",
        "comment": " TODO: Description of received-focus-from-keyboard attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "required",
        "comment": " TODO: Description of required attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "stopKeyboardEventPropagation",
        "comment": " TODO: Description of stop-keyboard-event-propagation attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "toggles",
        "comment": " TODO: Description of toggles attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "validator",
        "comment": " TODO: Description of validator attribute\n",
        "type": "String -> Html.Attribute msg"
      },
      {
        "name": "value",
        "comment": " TODO: Description of value attribute\n",
        "type": "String -> Html.Attribute msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Polymer.Paper.RadioGroup.Attributes",
    "comment": " Attributes from component. See <https://www.webcomponents.org/element/PolymerElements/>\n\n\n# Attributes\n\n@docs activateEvent, allowEmptySelection, attrForItemTitle, attrForSelected, disabled, fallbackSelection, multi, selectable, selectedAttribute, selectedClass, stopKeyboardEventPropagation\n\n",
    "aliases": [],
    "types": [],
    "values": [
      {
        "name": "activateEvent",
        "comment": " TODO: Description of activate-event attribute\n",
        "type": "String -> Html.Attribute msg"
      },
      {
        "name": "allowEmptySelection",
        "comment": " TODO: Description of allow-empty-selection attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "attrForItemTitle",
        "comment": " TODO: Description of attr-for-item-title attribute\n",
        "type": "String -> Html.Attribute msg"
      },
      {
        "name": "attrForSelected",
        "comment": " TODO: Description of attr-for-selected attribute\n",
        "type": "String -> Html.Attribute msg"
      },
      {
        "name": "disabled",
        "comment": " TODO: Description of disabled attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "fallbackSelection",
        "comment": " TODO: Description of fallback-selection attribute\n",
        "type": "String -> Html.Attribute msg"
      },
      {
        "name": "multi",
        "comment": " TODO: Description of multi attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "selectable",
        "comment": " TODO: Description of selectable attribute\n",
        "type": "String -> Html.Attribute msg"
      },
      {
        "name": "selectedAttribute",
        "comment": " TODO: Description of selected-attribute attribute\n",
        "type": "String -> Html.Attribute msg"
      },
      {
        "name": "selectedClass",
        "comment": " TODO: Description of selected-class attribute\n",
        "type": "String -> Html.Attribute msg"
      },
      {
        "name": "stopKeyboardEventPropagation",
        "comment": " TODO: Description of stop-keyboard-event-propagation attribute\n",
        "type": "Bool -> Html.Attribute msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Polymer.Paper.MenuButton.Attributes",
    "comment": " Attributes from component. See <https://www.webcomponents.org/element/PolymerElements/>\n\n\n# Attributes\n\n@docs allowOutsideScroll, closeOnActivate, disabled, dynamicAlign, focused, horizontalAlign, horizontalOffset, ignoreSelect, noAnimations, noOverlap, opened, restoreFocusOnClose, stopKeyboardEventPropagation, verticalAlign, verticalOffset\n\n",
    "aliases": [],
    "types": [],
    "values": [
      {
        "name": "allowOutsideScroll",
        "comment": " TODO: Description of allow-outside-scroll attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "closeOnActivate",
        "comment": " TODO: Description of close-on-activate attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "disabled",
        "comment": " TODO: Description of disabled attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "dynamicAlign",
        "comment": " TODO: Description of dynamic-align attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "focused",
        "comment": " TODO: Description of focused attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "horizontalAlign",
        "comment": " TODO: Description of horizontal-align attribute\n",
        "type": "String -> Html.Attribute msg"
      },
      {
        "name": "horizontalOffset",
        "comment": " TODO: Description of horizontal-offset attribute\n",
        "type": "Float -> Html.Attribute msg"
      },
      {
        "name": "ignoreSelect",
        "comment": " TODO: Description of ignore-select attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "noAnimations",
        "comment": " TODO: Description of no-animations attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "noOverlap",
        "comment": " TODO: Description of no-overlap attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "opened",
        "comment": " TODO: Description of opened attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "restoreFocusOnClose",
        "comment": " TODO: Description of restore-focus-on-close attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "stopKeyboardEventPropagation",
        "comment": " TODO: Description of stop-keyboard-event-propagation attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "verticalAlign",
        "comment": " TODO: Description of vertical-align attribute\n",
        "type": "String -> Html.Attribute msg"
      },
      {
        "name": "verticalOffset",
        "comment": " TODO: Description of vertical-offset attribute\n",
        "type": "Float -> Html.Attribute msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Polymer.Paper.Checkbox.Attributes",
    "comment": " Attributes from component. See <https://www.webcomponents.org/element/PolymerElements/>\n\n\n# Attributes\n\n@docs active, ariaActiveAttribute, checked, disabled, focused, invalid, name, noink, pointerDown, pressed, receivedFocusFromKeyboard, required, stopKeyboardEventPropagation, toggles, validator, value\n\n",
    "aliases": [],
    "types": [],
    "values": [
      {
        "name": "active",
        "comment": " TODO: Description of active attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "ariaActiveAttribute",
        "comment": " TODO: Description of aria-active-attribute attribute\n",
        "type": "String -> Html.Attribute msg"
      },
      {
        "name": "checked",
        "comment": " TODO: Description of checked attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "disabled",
        "comment": " TODO: Description of disabled attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "focused",
        "comment": " TODO: Description of focused attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "invalid",
        "comment": " TODO: Description of invalid attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "name",
        "comment": " TODO: Description of name attribute\n",
        "type": "String -> Html.Attribute msg"
      },
      {
        "name": "noink",
        "comment": " TODO: Description of noink attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "pointerDown",
        "comment": " TODO: Description of pointer-down attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "pressed",
        "comment": " TODO: Description of pressed attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "receivedFocusFromKeyboard",
        "comment": " TODO: Description of received-focus-from-keyboard attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "required",
        "comment": " TODO: Description of required attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "stopKeyboardEventPropagation",
        "comment": " TODO: Description of stop-keyboard-event-propagation attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "toggles",
        "comment": " TODO: Description of toggles attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "validator",
        "comment": " TODO: Description of validator attribute\n",
        "type": "String -> Html.Attribute msg"
      },
      {
        "name": "value",
        "comment": " TODO: Description of value attribute\n",
        "type": "String -> Html.Attribute msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Polymer.Paper.DropdownMenu.Attributes",
    "comment": " Attributes from component. See <https://www.webcomponents.org/element/PolymerElements/>\n\n\n# Attributes\n\n@docs active, allowOutsideScroll, alwaysFloatLabel, ariaActiveAttribute, disabled, dynamicAlign, errorMessage, focused, horizontalAlign, invalid, label, name, noAnimations, noLabelFloat, opened, placeholder, pointerDown, pressed, receivedFocusFromKeyboard, required, restoreFocusOnClose, selectedItemLabel, stopKeyboardEventPropagation, toggles, validator, value, verticalAlign\n\n",
    "aliases": [],
    "types": [],
    "values": [
      {
        "name": "active",
        "comment": " TODO: Description of active attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "allowOutsideScroll",
        "comment": " TODO: Description of allow-outside-scroll attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "alwaysFloatLabel",
        "comment": " TODO: Description of always-float-label attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "ariaActiveAttribute",
        "comment": " TODO: Description of aria-active-attribute attribute\n",
        "type": "String -> Html.Attribute msg"
      },
      {
        "name": "disabled",
        "comment": " TODO: Description of disabled attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "dynamicAlign",
        "comment": " TODO: Description of dynamic-align attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "errorMessage",
        "comment": " TODO: Description of error-message attribute\n",
        "type": "String -> Html.Attribute msg"
      },
      {
        "name": "focused",
        "comment": " TODO: Description of focused attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "horizontalAlign",
        "comment": " TODO: Description of horizontal-align attribute\n",
        "type": "String -> Html.Attribute msg"
      },
      {
        "name": "invalid",
        "comment": " TODO: Description of invalid attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "label",
        "comment": " TODO: Description of label attribute\n",
        "type": "String -> Html.Attribute msg"
      },
      {
        "name": "name",
        "comment": " TODO: Description of name attribute\n",
        "type": "String -> Html.Attribute msg"
      },
      {
        "name": "noAnimations",
        "comment": " TODO: Description of no-animations attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "noLabelFloat",
        "comment": " TODO: Description of no-label-float attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "opened",
        "comment": " TODO: Description of opened attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "placeholder",
        "comment": " TODO: Description of placeholder attribute\n",
        "type": "String -> Html.Attribute msg"
      },
      {
        "name": "pointerDown",
        "comment": " TODO: Description of pointer-down attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "pressed",
        "comment": " TODO: Description of pressed attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "receivedFocusFromKeyboard",
        "comment": " TODO: Description of received-focus-from-keyboard attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "required",
        "comment": " TODO: Description of required attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "restoreFocusOnClose",
        "comment": " TODO: Description of restore-focus-on-close attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "selectedItemLabel",
        "comment": " TODO: Description of selected-item-label attribute\n",
        "type": "String -> Html.Attribute msg"
      },
      {
        "name": "stopKeyboardEventPropagation",
        "comment": " TODO: Description of stop-keyboard-event-propagation attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "toggles",
        "comment": " TODO: Description of toggles attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "validator",
        "comment": " TODO: Description of validator attribute\n",
        "type": "String -> Html.Attribute msg"
      },
      {
        "name": "value",
        "comment": " TODO: Description of value attribute\n",
        "type": "String -> Html.Attribute msg"
      },
      {
        "name": "verticalAlign",
        "comment": " TODO: Description of vertical-align attribute\n",
        "type": "String -> Html.Attribute msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Polymer.Paper.ToggleButton.Attributes",
    "comment": " Attributes from component. See <https://www.webcomponents.org/element/PolymerElements/>\n\n\n# Attributes\n\n@docs active, ariaActiveAttribute, checked, disabled, focused, invalid, name, noink, pointerDown, pressed, receivedFocusFromKeyboard, required, stopKeyboardEventPropagation, toggles, validator, value\n\n",
    "aliases": [],
    "types": [],
    "values": [
      {
        "name": "active",
        "comment": " TODO: Description of active attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "ariaActiveAttribute",
        "comment": " TODO: Description of aria-active-attribute attribute\n",
        "type": "String -> Html.Attribute msg"
      },
      {
        "name": "checked",
        "comment": " TODO: Description of checked attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "disabled",
        "comment": " TODO: Description of disabled attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "focused",
        "comment": " TODO: Description of focused attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "invalid",
        "comment": " TODO: Description of invalid attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "name",
        "comment": " TODO: Description of name attribute\n",
        "type": "String -> Html.Attribute msg"
      },
      {
        "name": "noink",
        "comment": " TODO: Description of noink attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "pointerDown",
        "comment": " TODO: Description of pointer-down attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "pressed",
        "comment": " TODO: Description of pressed attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "receivedFocusFromKeyboard",
        "comment": " TODO: Description of received-focus-from-keyboard attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "required",
        "comment": " TODO: Description of required attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "stopKeyboardEventPropagation",
        "comment": " TODO: Description of stop-keyboard-event-propagation attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "toggles",
        "comment": " TODO: Description of toggles attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "validator",
        "comment": " TODO: Description of validator attribute\n",
        "type": "String -> Html.Attribute msg"
      },
      {
        "name": "value",
        "comment": " TODO: Description of value attribute\n",
        "type": "String -> Html.Attribute msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Polymer.Paper.SwatchPicker.Attributes",
    "comment": " Attributes from component. See <https://www.webcomponents.org/element/PolymerElements/>\n\n\n# Attributes\n\n@docs color, columnCount, horizontalAlign, noink, verticalAlign\n\n",
    "aliases": [],
    "types": [],
    "values": [
      {
        "name": "color",
        "comment": " TODO: Description of color attribute\n",
        "type": "String -> Html.Attribute msg"
      },
      {
        "name": "columnCount",
        "comment": " TODO: Description of column-count attribute\n",
        "type": "Float -> Html.Attribute msg"
      },
      {
        "name": "horizontalAlign",
        "comment": " TODO: Description of horizontal-align attribute\n",
        "type": "String -> Html.Attribute msg"
      },
      {
        "name": "noink",
        "comment": " TODO: Description of noink attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "verticalAlign",
        "comment": " TODO: Description of vertical-align attribute\n",
        "type": "String -> Html.Attribute msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Polymer.Paper.Card.Attributes",
    "comment": " Attributes from component. See <https://www.webcomponents.org/element/PolymerElements/>\n\n\n# Attributes\n\n@docs alt, animated, animatedShadow, elevation, fadeImage, heading, image, placeholderImage, preloadImage\n\n",
    "aliases": [],
    "types": [],
    "values": [
      {
        "name": "alt",
        "comment": " TODO: Description of alt attribute\n",
        "type": "String -> Html.Attribute msg"
      },
      {
        "name": "animated",
        "comment": " TODO: Description of animated attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "animatedShadow",
        "comment": " TODO: Description of animated-shadow attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "elevation",
        "comment": " TODO: Description of elevation attribute\n",
        "type": "Float -> Html.Attribute msg"
      },
      {
        "name": "fadeImage",
        "comment": " TODO: Description of fade-image attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "heading",
        "comment": " TODO: Description of heading attribute\n",
        "type": "String -> Html.Attribute msg"
      },
      {
        "name": "image",
        "comment": " TODO: Description of image attribute\n",
        "type": "String -> Html.Attribute msg"
      },
      {
        "name": "placeholderImage",
        "comment": " TODO: Description of placeholder-image attribute\n",
        "type": "String -> Html.Attribute msg"
      },
      {
        "name": "preloadImage",
        "comment": " TODO: Description of preload-image attribute\n",
        "type": "Bool -> Html.Attribute msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Polymer.Paper.Button.Attributes",
    "comment": " Attributes from component. See <https://www.webcomponents.org/element/PolymerElements/>\n\n\n# Attributes\n\n@docs active, ariaActiveAttribute, disabled, elevation, focused, noink, pointerDown, pressed, raised, receivedFocusFromKeyboard, stopKeyboardEventPropagation, toggles\n\n",
    "aliases": [],
    "types": [],
    "values": [
      {
        "name": "active",
        "comment": " TODO: Description of active attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "ariaActiveAttribute",
        "comment": " TODO: Description of aria-active-attribute attribute\n",
        "type": "String -> Html.Attribute msg"
      },
      {
        "name": "disabled",
        "comment": " TODO: Description of disabled attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "elevation",
        "comment": " TODO: Description of elevation attribute\n",
        "type": "Float -> Html.Attribute msg"
      },
      {
        "name": "focused",
        "comment": " TODO: Description of focused attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "noink",
        "comment": " TODO: Description of noink attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "pointerDown",
        "comment": " TODO: Description of pointer-down attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "pressed",
        "comment": " TODO: Description of pressed attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "raised",
        "comment": " TODO: Description of raised attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "receivedFocusFromKeyboard",
        "comment": " TODO: Description of received-focus-from-keyboard attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "stopKeyboardEventPropagation",
        "comment": " TODO: Description of stop-keyboard-event-propagation attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "toggles",
        "comment": " TODO: Description of toggles attribute\n",
        "type": "Bool -> Html.Attribute msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Polymer.Iron.Icons.Attributes",
    "comment": " Attributes from component. See <https://www.webcomponents.org/element/PolymerElements/>\n\n\n# Attributes\n\n@docs name, rtlMirroring, size\n\n",
    "aliases": [],
    "types": [],
    "values": [
      {
        "name": "name",
        "comment": " TODO: Description of name attribute\n",
        "type": "String -> Html.Attribute msg"
      },
      {
        "name": "rtlMirroring",
        "comment": " TODO: Description of rtl-mirroring attribute\n",
        "type": "Bool -> Html.Attribute msg"
      },
      {
        "name": "size",
        "comment": " TODO: Description of size attribute\n",
        "type": "Float -> Html.Attribute msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Polymer.Paper.RadioGroup",
    "comment": " Elements from paper-radio-group component. See <https://www.webcomponents.org/element/PolymerElements/paper-radio-group>\n\n\n# Elements\n\n@docs radioGroup\n\n",
    "aliases": [],
    "types": [],
    "values": [
      {
        "name": "radioGroup",
        "comment": " Material design: [Radio button](https://www.google.com/design/spec/components/selection-controls.html#selection-controls-radio-button)\n\n`paper-radio-group` allows user to select at most one radio button from a set.\nChecking one radio button that belongs to a radio group unchecks any\npreviously checked radio button within the same group. Use\n`selected` to get or set the selected radio button.\n\nThe <paper-radio-buttons> inside the group must have the `name` attribute\nset.\n\nExample:\n\n<paper-radio-group selected=\"small\">\n<paper-radio-button name=\"small\">Small</paper-radio-button>\n<paper-radio-button name=\"medium\">Medium</paper-radio-button>\n<paper-radio-button name=\"large\">Large</paper-radio-button>\n</paper-radio-group>\n\nRadio-button-groups can be made optional, and allow zero buttons to be selected:\n\n<paper-radio-group selected=\"small\" allow-empty-selection>\n<paper-radio-button name=\"small\">Small</paper-radio-button>\n<paper-radio-button name=\"medium\">Medium</paper-radio-button>\n<paper-radio-button name=\"large\">Large</paper-radio-button>\n</paper-radio-group>\n\nSee <a href=\"paper-radio-button\">paper-radio-button</a> for more\ninformation about `paper-radio-button`.\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-radio-group-item-padding` | The padding of the item | `12px`\n\n",
        "type": "List (Html.Attribute msg) -> List (Html.Html msg) -> Html.Html msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Polymer.Paper.RadioButton",
    "comment": " Elements from paper-radio-button component. See <https://www.webcomponents.org/element/PolymerElements/paper-radio-button>\n\n\n# Elements\n\n@docs radioButton\n\n",
    "aliases": [],
    "types": [],
    "values": [
      {
        "name": "radioButton",
        "comment": " Material design: [Radio button](https://www.google.com/design/spec/components/selection-controls.html#selection-controls-radio-button)\n\n`paper-radio-button` is a button that can be either checked or unchecked.\nUser can tap the radio button to check or uncheck it.\n\nUse a `<paper-radio-group>` to group a set of radio buttons. When radio buttons\nare inside a radio group, exactly one radio button in the group can be checked\nat any time.\n\nExample:\n\n<paper-radio-button></paper-radio-button>\n<paper-radio-button>Item label</paper-radio-button>\n\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-radio-button-unchecked-background-color` | Radio button background color when the input is not checked | `transparent`\n`--paper-radio-button-unchecked-color` | Radio button color when the input is not checked | `--primary-text-color`\n`--paper-radio-button-unchecked-ink-color` | Selected/focus ripple color when the input is not checked | `--primary-text-color`\n`--paper-radio-button-checked-color` | Radio button color when the input is checked | `--primary-color`\n`--paper-radio-button-checked-ink-color` | Selected/focus ripple color when the input is checked | `--primary-color`\n`--paper-radio-button-size` | Size of the radio button | `16px`\n`--paper-radio-button-ink-size` | Size of the ripple | `48px`\n`--paper-radio-button-label-color` | Label color | `--primary-text-color`\n`--paper-radio-button-label-spacing` | Spacing between the label and the button | `10px`\n`--paper-radio-button-radio-container` | A mixin applied to the internal radio container | `{}`\n`--paper-radio-button-label` | A mixin applied to the internal label | `{}`\n`--paper-radio-button-label-checked` | A mixin applied to the internal label when the radio button is checked | `{}`\n\nThis element applies the mixin `--paper-font-common-base` but does not import `paper-styles/typography.html`.\nIn order to apply the `Roboto` font to this element, make sure you've imported `paper-styles/typography.html`.\n\n",
        "type": "List (Html.Attribute msg) -> List (Html.Html msg) -> Html.Html msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Polymer.Paper.MenuButton",
    "comment": " Elements from paper-menu-button component. See <https://www.webcomponents.org/element/PolymerElements/paper-menu-button>\n\n\n# Elements\n\n@docs menuGrowHeightAnimation, menuGrowWidthAnimation, menuShrinkWidthAnimation, menuShrinkHeightAnimation, menuButton\n\n",
    "aliases": [],
    "types": [],
    "values": [
      {
        "name": "menuButton",
        "comment": " Material design: [Dropdown buttons](https://www.google.com/design/spec/components/buttons.html#buttons-dropdown-buttons)\n\n`paper-menu-button` allows one to compose a designated \"trigger\" element with\nanother element that represents \"content\", to create a dropdown menu that\ndisplays the \"content\" when the \"trigger\" is clicked.\n\nThe child element assigned to the `dropdown-trigger` slot will be used as the\n\"trigger\" element. The child element assigned to the `dropdown-content` slot will be\nused as the \"content\" element.\n\nThe `paper-menu-button` is sensitive to its content's `iron-select` events. If\nthe \"content\" element triggers an `iron-select` event, the `paper-menu-button`\nwill close automatically.\n\nExample:\n\n<paper-menu-button>\n<paper-icon-button icon=\"menu\" slot=\"dropdown-trigger\"></paper-icon-button>\n<paper-listbox slot=\"dropdown-content\">\n<paper-item>Share</paper-item>\n<paper-item>Settings</paper-item>\n<paper-item>Help</paper-item>\n</paper-listbox>\n</paper-menu-button>\n\n\n### Styling\n\nThe following custom properties and mixins are also available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-menu-button-dropdown-background` | Background color of the paper-menu-button dropdown | `--primary-background-color`\n`--paper-menu-button` | Mixin applied to the paper-menu-button | `{}`\n`--paper-menu-button-disabled` | Mixin applied to the paper-menu-button when disabled | `{}`\n`--paper-menu-button-dropdown` | Mixin applied to the paper-menu-button dropdown | `{}`\n`--paper-menu-button-content` | Mixin applied to the paper-menu-button content | `{}`\n\n",
        "type": "List (Html.Attribute msg) -> List (Html.Html msg) -> Html.Html msg"
      },
      {
        "name": "menuGrowHeightAnimation",
        "comment": " ",
        "type": "List (Html.Attribute msg) -> List (Html.Html msg) -> Html.Html msg"
      },
      {
        "name": "menuGrowWidthAnimation",
        "comment": " ",
        "type": "List (Html.Attribute msg) -> List (Html.Html msg) -> Html.Html msg"
      },
      {
        "name": "menuShrinkHeightAnimation",
        "comment": " ",
        "type": "List (Html.Attribute msg) -> List (Html.Html msg) -> Html.Html msg"
      },
      {
        "name": "menuShrinkWidthAnimation",
        "comment": " ",
        "type": "List (Html.Attribute msg) -> List (Html.Html msg) -> Html.Html msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Polymer.Paper.Progress",
    "comment": " Elements from paper-progress component. See <https://www.webcomponents.org/element/PolymerElements/paper-progress>\n\n\n# Elements\n\n@docs progress\n\n",
    "aliases": [],
    "types": [],
    "values": [
      {
        "name": "progress",
        "comment": " Material design: [Progress & activity](https://www.google.com/design/spec/components/progress-activity.html)\n\nThe progress bars are for situations where the percentage completed can be\ndetermined. They give users a quick sense of how much longer an operation\nwill take.\n\nExample:\n\n<paper-progress value=\"10\"></paper-progress>\n\nThere is also a secondary progress which is useful for displaying intermediate\nprogress, such as the buffer level during a streaming playback progress bar.\n\nExample:\n\n<paper-progress value=\"10\" secondary-progress=\"30\"></paper-progress>\n\n\n### Styling progress bar:\n\nTo change the active progress bar color:\n\npaper-progress {\n--paper-progress-active-color: #e91e63;\n}\n\nTo change the secondary progress bar color:\n\npaper-progress {\n--paper-progress-secondary-color: #f8bbd0;\n}\n\nTo change the progress bar background color:\n\npaper-progress {\n--paper-progress-container-color: #64ffda;\n}\n\nAdd the class `transiting` to a paper-progress to animate the progress bar when\nthe value changed. You can also customize the transition:\n\npaper-progress {\n--paper-progress-transition-duration: 0.08s;\n--paper-progress-transition-timing-function: ease;\n--paper-progress-transition-transition-delay: 0s;\n}\n\nTo change the duration of the indeterminate cycle:\n\npaper-progress {\n--paper-progress-indeterminate-cycle-duration: 2s;\n}\n\nThe following mixins are available for styling:\n\nCustom property | Description | Default\n-------------------------------------------------|---------------------------------------------|--------------\n`--paper-progress-container` | Mixin applied to container | `{}`\n`--paper-progress-transition-duration` | Duration of the transition | `0.008s`\n`--paper-progress-transition-timing-function` | The timing function for the transition | `ease`\n`--paper-progress-transition-delay` | delay for the transition | `0s`\n`--paper-progress-container-color` | Color of the container | `--google-grey-300`\n`--paper-progress-active-color` | The color of the active bar | `--google-green-500`\n`--paper-progress-secondary-color` | The color of the secondary bar | `--google-green-100`\n`--paper-progress-disabled-active-color` | The color of the active bar if disabled | `--google-grey-500`\n`--paper-progress-disabled-secondary-color` | The color of the secondary bar if disabled | `--google-grey-300`\n`--paper-progress-height` | The height of the progress bar | `4px`\n`--paper-progress-indeterminate-cycle-duration` | Duration of an indeterminate cycle | `2s`\n\n",
        "type": "List (Html.Attribute msg) -> List (Html.Html msg) -> Html.Html msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Polymer.Paper.Item",
    "comment": " Elements from paper-item component. See <https://www.webcomponents.org/element/PolymerElements/paper-item>\n\n\n# Elements\n\n@docs item, iconItem, itemBody\n\n",
    "aliases": [],
    "types": [],
    "values": [
      {
        "name": "iconItem",
        "comment": " `<paper-icon-item>` is a convenience element to make an item with icon. It is an interactive list\nitem with a fixed-width icon area, according to Material Design. This is useful if the icons are of\nvarying widths, but you want the item bodies to line up. Use this like a `<paper-item>`. The child\nnode with the slot name `item-icon` is placed in the icon area.\n\n<paper-icon-item>\n<iron-icon icon=\"favorite\" slot=\"item-icon\"></iron-icon>\nFavorite\n</paper-icon-item>\n<paper-icon-item>\n<div class=\"avatar\" slot=\"item-icon\"></div>\nAvatar\n</paper-icon-item>\n\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n------------------------------|------------------------------------------------|----------\n`--paper-item-icon-width` | Width of the icon area | `56px`\n`--paper-item-icon` | Mixin applied to the icon area | `{}`\n`--paper-icon-item` | Mixin applied to the item | `{}`\n`--paper-item-selected-weight`| The font weight of a selected item | `bold`\n`--paper-item-selected` | Mixin applied to selected paper-items | `{}`\n`--paper-item-disabled-color` | The color for disabled paper-items | `--disabled-text-color`\n`--paper-item-disabled` | Mixin applied to disabled paper-items | `{}`\n`--paper-item-focused` | Mixin applied to focused paper-items | `{}`\n`--paper-item-focused-before` | Mixin applied to :before focused paper-items | `{}`\n\n",
        "type": "List (Html.Attribute msg) -> List (Html.Html msg) -> Html.Html msg"
      },
      {
        "name": "item",
        "comment": " Material design: [Lists](https://www.google.com/design/spec/components/lists.html)\n\n`<paper-item>` is an interactive list item. By default, it is a horizontal flexbox.\n\n<paper-item>Item</paper-item>\n\nUse this element with `<paper-item-body>` to make Material Design styled two-line and three-line\nitems.\n\n<paper-item>\n<paper-item-body two-line>\n<div>Show your status</div>\n<div secondary>Your status is visible to everyone</div>\n</paper-item-body>\n<iron-icon icon=\"warning\"></iron-icon>\n</paper-item>\n\nTo use `paper-item` as a link, wrap it in an anchor tag. Since `paper-item` will\nalready receive focus, you may want to prevent the anchor tag from receiving\nfocus as well by setting its tabindex to -1.\n\n<a href=\"https://www.polymer-project.org/\" tabindex=\"-1\">\n<paper-item raised>Polymer Project</paper-item>\n</a>\n\nIf you are concerned about performance and want to use `paper-item` in a `paper-listbox`\nwith many items, you can just use a native `button` with the `paper-item` class\napplied (provided you have correctly included the shared styles):\n\n<style is=\"custom-style\" include=\"paper-item-shared-styles\"></style>\n\n<paper-listbox>\n<button class=\"paper-item\" role=\"option\">Inbox</button>\n<button class=\"paper-item\" role=\"option\">Starred</button>\n<button class=\"paper-item\" role=\"option\">Sent mail</button>\n</paper-listbox>\n\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n------------------------------|----------------------------------------------|----------\n`--paper-item-min-height` | Minimum height of the item | `48px`\n`--paper-item` | Mixin applied to the item | `{}`\n`--paper-item-selected-weight`| The font weight of a selected item | `bold`\n`--paper-item-selected` | Mixin applied to selected paper-items | `{}`\n`--paper-item-disabled-color` | The color for disabled paper-items | `--disabled-text-color`\n`--paper-item-disabled` | Mixin applied to disabled paper-items | `{}`\n`--paper-item-focused` | Mixin applied to focused paper-items | `{}`\n`--paper-item-focused-before` | Mixin applied to :before focused paper-items | `{}`\n\n\n### Accessibility\n\nThis element has `role=\"listitem\"` by default. Depending on usage, it may be more appropriate to set\n`role=\"menuitem\"`, `role=\"menuitemcheckbox\"` or `role=\"menuitemradio\"`.\n\n<paper-item role=\"menuitemcheckbox\">\n<paper-item-body>\nShow your status\n</paper-item-body>\n<paper-checkbox></paper-checkbox>\n</paper-item>\n\n",
        "type": "List (Html.Attribute msg) -> List (Html.Html msg) -> Html.Html msg"
      },
      {
        "name": "itemBody",
        "comment": " Use `<paper-item-body>` in a `<paper-item>` or `<paper-icon-item>` to make two- or\nthree- line items. It is a flex item that is a vertical flexbox.\n\n<paper-item>\n<paper-item-body two-line>\n<div>Show your status</div>\n<div secondary>Your status is visible to everyone</div>\n</paper-item-body>\n</paper-item>\n\nThe child elements with the `secondary` attribute is given secondary text styling.\n\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-item-body-two-line-min-height` | Minimum height of a two-line item | `72px`\n`--paper-item-body-three-line-min-height` | Minimum height of a three-line item | `88px`\n`--paper-item-body-secondary-color` | Foreground color for the `secondary` area | `--secondary-text-color`\n`--paper-item-body-secondary` | Mixin applied to the `secondary` area | `{}`\n\n",
        "type": "List (Html.Attribute msg) -> List (Html.Html msg) -> Html.Html msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Polymer.Paper.Listbox",
    "comment": " Elements from paper-listbox component. See <https://www.webcomponents.org/element/PolymerElements/paper-listbox>\n\n\n# Elements\n\n@docs listbox\n\n",
    "aliases": [],
    "types": [],
    "values": [
      {
        "name": "listbox",
        "comment": " Material design: [Menus](https://www.google.com/design/spec/components/menus.html)\n\n`<paper-listbox>` implements an accessible listbox control with Material Design styling. The focused item\nis highlighted, and the selected item has bolded text.\n\n<paper-listbox>\n<paper-item>Item 1</paper-item>\n<paper-item>Item 2</paper-item>\n</paper-listbox>\n\nAn initial selection can be specified with the `selected` attribute.\n\n<paper-listbox selected=\"0\">\n<paper-item>Item 1</paper-item>\n<paper-item>Item 2</paper-item>\n</paper-listbox>\n\nMake a multi-select listbox with the `multi` attribute. Items in a multi-select listbox can be deselected,\nand multiple item can be selected.\n\n<paper-listbox multi>\n<paper-item>Item 1</paper-item>\n<paper-item>Item 2</paper-item>\n</paper-listbox>\n\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-listbox-background-color` | Menu background color | `--primary-background-color`\n`--paper-listbox-color` | Menu foreground color | `--primary-text-color`\n`--paper-listbox` | Mixin applied to the listbox | `{}`\n\n\n### Accessibility\n\n`<paper-listbox>` has `role=\"listbox\"` by default. A multi-select listbox will also have\n`aria-multiselectable` set. It implements key bindings to navigate through the listbox with the up and\ndown arrow keys, esc to exit the listbox, and enter to activate a listbox item. Typing the first letter\nof a listbox item will also focus it.\n\n",
        "type": "List (Html.Attribute msg) -> List (Html.Html msg) -> Html.Html msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Polymer.Paper.Toolbar",
    "comment": " Elements from paper-toolbar component. See <https://www.webcomponents.org/element/PolymerElements/paper-toolbar>\n\n\n# Elements\n\n@docs toolbar\n\n",
    "aliases": [],
    "types": [],
    "values": [
      {
        "name": "toolbar",
        "comment": " *This element has been deprecated in favor of [app-layout](https://github.com/PolymerElements/app-layout).**\n\nMaterial design: [Toolbars](https://www.google.com/design/spec/components/toolbars.html)\n\n`paper-toolbar` is a horizontal bar containing items that can be used for\nlabel, navigation, search and actions. The items placed inside the\n`paper-toolbar` are projected into a `class=\"horizontal center layout\"` container inside of\n`paper-toolbar`'s Shadow DOM. You can use flex attributes to control the items'\nsizing.\n\nExample:\n\n```html\n<paper-toolbar>\n <paper-icon-button icon=\"menu\" on-tap=\"menuAction\"></paper-icon-button>\n <div class=\"title\">Title</div>\n <paper-icon-button icon=\"more-vert\" on-tap=\"moreAction\"></paper-icon-button>\n</paper-toolbar>\n```\n\n`paper-toolbar` has a standard height, but can made be taller by setting `tall`\nclass on the `paper-toolbar`. This will make the toolbar 3x the normal height.\n\n```html\n<paper-toolbar class=\"tall\">\n <paper-icon-button icon=\"menu\"></paper-icon-button>\n</paper-toolbar>\n```\n\nApply `medium-tall` class to make the toolbar medium tall. This will make the\ntoolbar 2x the normal height.\n\n```html\n<paper-toolbar class=\"medium-tall\">\n <paper-icon-button icon=\"menu\"></paper-icon-button>\n</paper-toolbar>\n```\n\nWhen `tall`, items can pin to either the top (default), middle or bottom. Use\n`middle` slot for middle content and `bottom` slot for bottom content.\n\n```html\n<paper-toolbar class=\"tall\">\n <paper-icon-button icon=\"menu\"></paper-icon-button>\n <div slot=\"middle\" class=\"title\">Middle Title</div>\n <div slot=\"bottom\" class=\"title\">Bottom Title</div>\n</paper-toolbar>\n```\n\nFor `medium-tall` toolbar, the middle and bottom contents overlap and are\npinned to the bottom. But `middleJustify` and `bottomJustify` attributes are\nstill honored separately.\n\nTo make an element completely fit at the bottom of the toolbar, use `fit` along\nwith `bottom`.\n\n```html\n<paper-toolbar class=\"tall\">\n <div id=\"progressBar\" slot=\"bottom\" class=\"fit\"></div>\n</paper-toolbar>\n```\n\nWhen inside a `paper-header-panel` element with `mode=\"waterfall-tall\"`,\nthe class `.animate` is toggled to animate the height change in the toolbar.\n\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-toolbar-title` | Mixin applied to the title of the toolbar | `{}`\n`--paper-toolbar-background` | Toolbar background color | `--primary-color`\n`--paper-toolbar-color` | Toolbar foreground color | `--dark-theme-text-color`\n`--paper-toolbar-height` | Custom height for toolbar | `64px`\n`--paper-toolbar-sm-height` | Custom height for small screen toolbar | `56px`\n`--paper-toolbar` | Mixin applied to the toolbar | `{}`\n`--paper-toolbar-content` | Mixin applied to the content section of the toolbar | `{}`\n`--paper-toolbar-medium` | Mixin applied to medium height toolbar | `{}`\n`--paper-toolbar-tall` | Mixin applied to tall height toolbar | `{}`\n`--paper-toolbar-transition` | Transition applied to the `.animate` class | `height 0.18s ease-in`\n\n\n### Accessibility\n\n`<paper-toolbar>` has `role=\"toolbar\"` by default. Any elements with the class `title` will\nbe used as the label of the toolbar via `aria-labelledby`.\n\n\n### Breaking change in 2.0\n\nIn Polymer 1.x, default content used to be distribuited automatically to the top toolbar.\nIn v2, the you must set `slot=\"top\"` on the default content to distribuite the content to\nthe top toolbar.\n\n",
        "type": "List (Html.Attribute msg) -> List (Html.Html msg) -> Html.Html msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Polymer.Paper.Tooltip",
    "comment": " Elements from paper-tooltip component. See <https://www.webcomponents.org/element/PolymerElements/paper-tooltip>\n\n\n# Elements\n\n@docs tooltip\n\n",
    "aliases": [],
    "types": [],
    "values": [
      {
        "name": "tooltip",
        "comment": " Material design: [Tooltips](https://www.google.com/design/spec/components/tooltips.html)\n\n`<paper-tooltip>` is a label that appears on hover and focus when the user\nhovers over an element with the cursor or with the keyboard. It will be centered\nto an anchor element specified in the `for` attribute, or, if that doesn't exist,\ncentered to the parent node containing it. Note that as of `paper-tooltip#2.0.0`,\nyou must explicitely include the `web-animations` polyfill if you want this\nelement to work on browsers not implementing the WebAnimations spec.\n\nExample:\n// polyfill\n<link rel=\"import\" href=\"../../neon-animation/web-animations.html\">\n\n<div style=\"display:inline-block\">\n <button>Click me!</button>\n <paper-tooltip>Tooltip text</paper-tooltip>\n </div>\n\n<div>\n <button id=\"btn\">Click me!</button>\n <paper-tooltip for=\"btn\">Tooltip text</paper-tooltip>\n </div>\n\nThe tooltip can be positioned on the top|bottom|left|right of the anchor using\nthe `position` attribute. The default position is bottom.\n\n<paper-tooltip for=\"btn\" position=\"left\">Tooltip text</paper-tooltip>\n<paper-tooltip for=\"btn\" position=\"top\">Tooltip text</paper-tooltip>\n\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-tooltip-background` | The background color of the tooltip | `#616161`\n`--paper-tooltip-opacity` | The opacity of the tooltip | `0.9`\n`--paper-tooltip-text-color` | The text color of the tooltip | `white`\n`--paper-tooltip` | Mixin applied to the tooltip | `{}`\n\n",
        "type": "List (Html.Attribute msg) -> List (Html.Html msg) -> Html.Html msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Polymer.Paper.Tabs",
    "comment": " Elements from paper-tabs component. See <https://www.webcomponents.org/element/PolymerElements/paper-tabs>\n\n\n# Elements\n\n@docs tab, tabs\n\n",
    "aliases": [],
    "types": [],
    "values": [
      {
        "name": "tab",
        "comment": " `paper-tab` is styled to look like a tab. It should be used in conjunction with\n`paper-tabs`.\n\nExample:\n\n<paper-tabs selected=\"0\">\n<paper-tab>TAB 1</paper-tab>\n<paper-tab>TAB 2</paper-tab>\n<paper-tab>TAB 3</paper-tab>\n</paper-tabs>\n\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-tab-ink` | Ink color | `--paper-yellow-a100`\n`--paper-tab` | Mixin applied to the tab | `{}`\n`--paper-tab-content` | Mixin applied to the tab content | `{}`\n`--paper-tab-content-unselected` | Mixin applied to the tab content when the tab is not selected | `{}`\n\nThis element applies the mixin `--paper-font-common-base` but does not import `paper-styles/typography.html`.\nIn order to apply the `Roboto` font to this element, make sure you've imported `paper-styles/typography.html`.\n\n",
        "type": "List (Html.Attribute msg) -> List (Html.Html msg) -> Html.Html msg"
      },
      {
        "name": "tabs",
        "comment": " Material design: [Tabs](https://www.google.com/design/spec/components/tabs.html)\n\n`paper-tabs` makes it easy to explore and switch between different views or functional aspects of\nan app, or to browse categorized data sets.\n\nUse `selected` property to get or set the selected tab.\n\nExample:\n\n<paper-tabs selected=\"0\">\n<paper-tab>TAB 1</paper-tab>\n<paper-tab>TAB 2</paper-tab>\n<paper-tab>TAB 3</paper-tab>\n</paper-tabs>\n\nSee <a href=\"?active=paper-tab\">paper-tab</a> for more information about\n`paper-tab`.\n\nA common usage for `paper-tabs` is to use it along with `iron-pages` to switch\nbetween different views.\n\n<paper-tabs selected=\"{{selected}}\">\n<paper-tab>Tab 1</paper-tab>\n<paper-tab>Tab 2</paper-tab>\n<paper-tab>Tab 3</paper-tab>\n</paper-tabs>\n\n<iron-pages selected=\"{{selected}}\">\n<div>Page 1</div>\n<div>Page 2</div>\n<div>Page 3</div>\n</iron-pages>\n\nTo use links in tabs, add `link` attribute to `paper-tab` and put an `<a>`\nelement in `paper-tab` with a `tabindex` of -1.\n\nExample:\n\n<pre><code>\n&lt;style is=\"custom-style\">\n .link {\n &#64;apply --layout-horizontal;\n &#64;apply --layout-center-center;\n }\n&lt;/style>\n\n&lt;paper-tabs selected=\"0\">\n&lt;paper-tab link>\n&lt;a href=\"#link1\" class=\"link\" tabindex=\"-1\">TAB ONE&lt;/a>\n&lt;/paper-tab>\n&lt;paper-tab link>\n&lt;a href=\"#link2\" class=\"link\" tabindex=\"-1\">TAB TWO&lt;/a>\n&lt;/paper-tab>\n&lt;paper-tab link>\n&lt;a href=\"#link3\" class=\"link\" tabindex=\"-1\">TAB THREE&lt;/a>\n&lt;/paper-tab>\n&lt;/paper-tabs>\n</code></pre>\n\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-tabs-selection-bar-color` | Color for the selection bar | `--paper-yellow-a100`\n`--paper-tabs-selection-bar` | Mixin applied to the selection bar | `{}`\n`--paper-tabs` | Mixin applied to the tabs | `{}`\n`--paper-tabs-content` | Mixin applied to the content container of tabs | `{}`\n`--paper-tabs-container` | Mixin applied to the layout container of tabs | `{}`\n\n",
        "type": "List (Html.Attribute msg) -> List (Html.Html msg) -> Html.Html msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Polymer.App.Layout",
    "comment": " Elements from app-layout component. See <https://www.webcomponents.org/element/PolymerElements/app-layout>\n\n\n# Elements\n\n@docs drawer, drawerLayout, grid, header, headerLayout, toolbar, box\n\n",
    "aliases": [],
    "types": [],
    "values": [
      {
        "name": "box",
        "comment": " app-box is a container element that can have scroll effects - visual effects based on\nscroll position. For example, the parallax effect can be used to move an image at a slower\nrate than the foreground.\n\n```html\n<app-box style=\"height: 100px;\" effects=\"parallax-background\">\n <img slot=\"background\" src=\"picture.png\" style=\"width: 100%; height: 600px;\">\n</app-box>\n```\n\nNotice the `background` attribute in the `img` element; this attribute specifies that that\nimage is used as the background. By adding the background to the light dom, you can compose\nbackgrounds that can change dynamically. Alternatively, the mixin `--app-box-background-front-layer`\nallows to style the background. For example:\n\n```css\n .parallaxAppBox {\n --app-box-background-front-layer: {\n background-image: url(picture.png);\n };\n }\n```\n\nFinally, app-box can have content inside. For example:\n\n```html\n<app-box effects=\"parallax-background\">\n <h2>Sub title</h2>\n</app-box>\n```\n\n\n#### Importing the effects\n\nTo use the scroll effects, you must explicitly import them in addition to `app-box`:\n\n```html\n<link rel=\"import\" href=\"/bower_components/app-layout/app-scroll-effects/app-scroll-effects.html\">\n```\n\n\n#### List of effects\n\n**parallax-background**\nA simple parallax effect that vertically translates the backgrounds based on a fraction\nof the scroll position. For example:\n\n```css\napp-header {\n --app-header-background-front-layer: {\n background-image: url(...);\n };\n}\n```\n\n```html\n<app-header style=\"height: 300px;\" effects=\"parallax-background\">\n <app-toolbar>App name</app-toolbar>\n</app-header>\n```\n\nThe fraction determines how far the background moves relative to the scroll position.\nThis value can be assigned via the `scalar` config value and it is typically a value\nbetween 0 and 1 inclusive. If `scalar=0`, the background doesn't move away from the header.\n\n\n## Styling\n\nMixin | Description | Default\n----------------|-------------|----------\n`--app-box-background-front-layer` | Applies to the front layer of the background | {}\n\n",
        "type": "List (Html.Attribute msg) -> List (Html.Html msg) -> Html.Html msg"
      },
      {
        "name": "drawer",
        "comment": " app-drawer is a navigation drawer that can slide in from the left or right.\n\nExample:\n\nAlign the drawer at the start, which is left in LTR layouts (default):\n\n```html\n<app-drawer opened></app-drawer>\n```\n\nAlign the drawer at the end:\n\n```html\n<app-drawer align=\"end\" opened></app-drawer>\n```\n\nTo make the contents of the drawer scrollable, create a wrapper for the scroll\ncontent, and apply height and overflow styles to it.\n\n```html\n<app-drawer>\n <div style=\"height: 100%; overflow: auto;\"></div>\n</app-drawer>\n```\n\n\n### Styling\n\nCustom property | Description | Default\n---------------------------------|----------------------------------------|--------------------\n`--app-drawer-width` | Width of the drawer | 256px\n`--app-drawer-content-container` | Mixin for the drawer content container | {}\n`--app-drawer-scrim-background` | Background for the scrim | rgba(0, 0, 0, 0.5)\n\n*NOTE:** If you use <app-drawer> with <app-drawer-layout> and specify a value for\n`--app-drawer-width`, that value must be accessible by both elements. This can be done by\ndefining the value on the `:host` that contains <app-drawer-layout> (or `html` if outside\na shadow root):\n\n```css\n:host {\n --app-drawer-width: 300px;\n}\n```\n\n",
        "type": "List (Html.Attribute msg) -> List (Html.Html msg) -> Html.Html msg"
      },
      {
        "name": "drawerLayout",
        "comment": " app-drawer-layout is a wrapper element that positions an app-drawer and other content. When\nthe viewport width is smaller than `responsiveWidth`, this element changes to narrow layout.\nIn narrow layout, the drawer will be stacked on top of the main content. The drawer will slide\nin/out to hide/reveal the main content.\n\nBy default the drawer is aligned to the start, which is left in LTR layouts:\n\n```html\n<app-drawer-layout>\n <app-drawer slot=\"drawer\">\n drawer content\n </app-drawer>\n <div>\n main content\n </div>\n</app-drawer-layout>\n```\n\nAlign the drawer at the end:\n\n```html\n<app-drawer-layout>\n <app-drawer slot=\"drawer\" align=\"end\">\n drawer content\n </app-drawer>\n <div>\n main content\n </div>\n</app-drawer-layout>\n```\n\nWith an app-header-layout:\n\n```html\n<app-drawer-layout>\n <app-drawer slot=\"drawer\">\n drawer-content\n </app-drawer>\n <app-header-layout>\n <app-header slot=\"header\">\n <app-toolbar>\n <div main-title>App name</div>\n </app-toolbar>\n </app-header>\n\n main content\n\n </app-header-layout>\n</app-drawer-layout>\n```\n\nAdd the `drawer-toggle` attribute to elements inside `app-drawer-layout` that toggle the drawer on click events:\n\n```html\n<app-drawer-layout>\n <app-drawer slot=\"drawer\">\n drawer-content\n </app-drawer>\n <app-header-layout>\n <app-header slot=\"header\">\n <app-toolbar>\n <paper-icon-button icon=\"menu\" drawer-toggle></paper-icon-button>\n <div main-title>App name</div>\n </app-toolbar>\n </app-header>\n\n main content\n\n </app-header-layout>\n</app-drawer-layout>\n```\n\n*NOTE:** With app-layout 2.0, the `drawer-toggle` element will not be automatically hidden\nwhen app-drawer-layout is not in narrow layout. To add this, add the following CSS rule where\napp-drawer-layout is used:\n\n```css\napp-drawer-layout:not([narrow]) [drawer-toggle] {\n display: none;\n}\n```\n\nAdd the `fullbleed` attribute to app-drawer-layout to make it fit the size of its container:\n\n```html\n<app-drawer-layout fullbleed>\n <app-drawer slot=\"drawer\">\n drawer content\n </app-drawer>\n <div>\n main content\n </div>\n</app-drawer-layout>\n```\n\n\n### Styling\n\nCustom property | Description | Default\n-----------------------------------------|--------------------------------------|---------\n`--app-drawer-width` | Width of the drawer | 256px\n`--app-drawer-layout-content-transition` | Transition for the content container | none\n\n*NOTE:** If you use <app-drawer> with <app-drawer-layout> and specify a value for\n`--app-drawer-width`, that value must be accessible by both elements. This can be done by\ndefining the value on the `:host` that contains <app-drawer-layout> (or `html` if outside\na shadow root):\n\n```css\n:host {\n --app-drawer-width: 300px;\n}\n```\n\n",
        "type": "List (Html.Attribute msg) -> List (Html.Html msg) -> Html.Html msg"
      },
      {
        "name": "grid",
        "comment": " app-grid is a helper class useful for creating responsive, fluid grid layouts using custom properties.\nBecause custom properties can be defined inside a `@media` rule, you can customize the grid layout\nfor different responsive breakpoints.\n\nExample:\n\nImport `app-grid-style.html` and include `app-grid-style` in the style of an element's definition.\nThen, add the class `app-grid` to a container such as `ul` or `div`:\n\n```html\n<template>\n <style include=\"app-grid-style\">\n :host {\n --app-grid-columns: 3;\n --app-grid-item-height: 100px;\n }\n\n ul {\n padding: 0;\n list-style: none;\n }\n\n .item {\n background-color: white;\n }\n </style>\n <ul class=\"app-grid\">\n <li class=\"item\">1</li>\n <li class=\"item\">2</li>\n <li class=\"item\">3</li>\n </ul>\n</template>\n```\n\nIn the example above, the grid will take 3 columns per row.\n\n\n### Expandible items\n\nIn many cases, it's useful to expand an item more than 1 column. To achieve this type of layout,\nyou can specify the number of columns the item should expand to by setting the custom property\n`--app-grid-expandible-item-columns`. To indicate which item should expand, apply the mixin\n`--app-grid-expandible-item` to a rule with a selector to the item. For example:\n\n<pre><code>\n&lt;template>\n &lt;style include=\"app-grid-style\">\n :host {\n --app-grid-columns: 3;\n --app-grid-item-height: 100px;\n --app-grid-expandible-item-columns: 3;\n }\n\n/Applications /Library /Network /System /Users /Volumes /bin /cores /dev /etc /home /installer.failurerequests /keybase /net /opt /private /sbin /tmp /usr /var Only the first item should expand */\n.item:first-child {\n&#64;apply --app-grid-expandible-item;\n}\n&lt;/style>\n&lt;/template>\n</code></pre>\n\n\n### Preserving the aspect ratio\n\nWhen the size of a grid item should preserve the aspect ratio, you can add the `has-aspect-ratio`\nattribute to the element with the class `.app-grid`. Now, every item element becomes a wrapper around\nthe item content. For example:\n\n```html\n<template>\n <style include=\"app-grid-style\">\n :host {\n --app-grid-columns: 3;\n /Applications /Library /Network /System /Users /Volumes /bin /cores /dev /etc /home /installer.failurerequests /keybase /net /opt /private /sbin /tmp /usr /var 50% the width of the item is equivalent to 2:1 aspect ratio*/\n --app-grid-item-height: 50%;\n }\n\n .item {\n background-color: white;\n }\n </style>\n <ul class=\"app-grid\" has-aspect-ratio>\n <li class=\"item\">\n <div>item 1</div>\n </li>\n <li class=\"item\">\n <div>item 2</div>\n </li>\n <li class=\"item\">\n <div>item 3</div>\n </li>\n </ul>\n</template>\n```\n\n\n### Styling\n\nCustom property | Description | Default\n----------------------------------------------|------------------------------------------------------------|------------------\n`--app-grid-columns` | The number of columns per row. | 1\n`--app-grid-gutter` | The space between two items. | 0px\n`--app-grid-item-height` | The height of the items. | auto\n`--app-grid-expandible-item-columns` | The number of columns an expandible item should expand to. | 1\n\n",
        "type": "List (Html.Attribute msg) -> List (Html.Html msg) -> Html.Html msg"
      },
      {
        "name": "header",
        "comment": " app-header is container element for app-toolbars at the top of the screen that can have scroll\neffects. By default, an app-header moves away from the viewport when scrolling down and\nif using `reveals`, the header slides back when scrolling back up. For example:\n\n```html\n<app-header reveals>\n <app-toolbar>\n <div main-title>App name</div>\n </app-toolbar>\n</app-header>\n```\n\napp-header can also condense when scrolling down. To achieve this behavior, the header\nmust have a larger height than the `sticky` element in the light DOM. For example:\n\n```html\n<app-header style=\"height: 96px;\" condenses fixed>\n <app-toolbar style=\"height: 64px;\">\n <div main-title>App name</div>\n </app-toolbar>\n</app-header>\n```\n\nIn this case the header is initially `96px` tall, and it shrinks to `64px` when scrolling down.\nThat is what is meant by \"condensing\".\n\n\n### Sticky element\n\nThe element that is positioned fixed to top of the header's `scrollTarget` when a threshold\nis reached, similar to `position: sticky` in CSS. This element **must** be an immediate\nchild of app-header. By default, the `sticky` element is the first `app-toolbar that\nis an immediate child of app-header.\n\n```html\n<app-header condenses>\n <app-toolbar> Sticky element </app-toolbar>\n</app-header>\n```\n\n\n#### Customizing the sticky element\n\n```html\n<app-header condenses>\n <app-toolbar></app-toolbar>\n <app-toolbar sticky> Sticky element </app-toolbar>\n</app-header>\n```\n\n\n### Scroll target\n\nThe app-header's `scrollTarget` property allows to customize the scrollable element to which\nthe header responds when the user scrolls. By default, app-header uses the document as\nthe scroll target, but you can customize this property by setting the id of the element, e.g.\n\n```html\n<div id=\"scrollingRegion\" style=\"overflow-y: auto;\">\n <app-header scroll-target=\"scrollingRegion\">\n </app-header>\n</div>\n```\n\nIn this case, the `scrollTarget` property points to the outer div element. Alternatively,\nyou can set this property programmatically:\n\n```js\nappHeader.scrollTarget = document.querySelector(\"#scrollingRegion\");\n```\n\n\n## Backgrounds\n\napp-header has two background layers that can be used for styling when the header is condensed\nor when the scrollable element is scrolled to the top.\n\n\n## Scroll effects\n\nScroll effects are *optional* visual effects applied in app-header based on scroll position. For example,\nThe [Material Design scrolling techniques](https://www.google.com/design/spec/patterns/scrolling-techniques.html)\nrecommends effects that can be installed via the `effects` property. e.g.\n\n```html\n<app-header effects=\"waterfall\">\n <app-toolbar>App name</app-toolbar>\n</app-header>\n```\n\n\n#### Importing the effects\n\nTo use the scroll effects, you must explicitly import them in addition to `app-header`:\n\n```html\n<link rel=\"import\" href=\"/bower_components/app-layout/app-scroll-effects/app-scroll-effects.html\">\n```\n\n\n#### List of effects\n\n**blend-background**\nFades in/out two background elements by applying CSS opacity based on scroll position.\nYou can use this effect to smoothly change the background color or image of the header.\nFor example, using the mixin `--app-header-background-rear-layer` lets you assign a different\nbackground when the header is condensed:\n\n```css\napp-header {\n background-color: red;\n --app-header-background-rear-layer: {\n /Applications /Library /Network /System /Users /Volumes /bin /cores /dev /etc /home /installer.failurerequests /keybase /net /opt /private /sbin /tmp /usr /var The header is blue when condensed */\n background-color: blue;\n };\n}\n```\n\n**fade-background**\nUpon scrolling past a threshold, this effect will trigger an opacity transition to\nfade in/out the backgrounds. Compared to the `blend-background` effect,\nthis effect doesn't interpolate the opacity based on scroll position.\n\n**parallax-background**\nA simple parallax effect that vertically translates the backgrounds based on a fraction\nof the scroll position. For example:\n\n```css\napp-header {\n --app-header-background-front-layer: {\n background-image: url(...);\n };\n}\n```\n\n```html\n<app-header style=\"height: 300px;\" effects=\"parallax-background\">\n <app-toolbar>App name</app-toolbar>\n</app-header>\n```\n\nThe fraction determines how far the background moves relative to the scroll position.\nThis value can be assigned via the `scalar` config value and it is typically a value\nbetween 0 and 1 inclusive. If `scalar=0`, the background doesn't move away from the header.\n\n**resize-title**\nProgressively interpolates the size of the title from the element with the `main-title` attribute\nto the element with the `condensed-title` attribute as the header condenses. For example:\n\n```html\n<app-header condenses reveals effects=\"resize-title\">\n <app-toolbar>\n <h4 condensed-title>App name</h4>\n </app-toolbar>\n <app-toolbar>\n <h1 main-title>App name</h1>\n </app-toolbar>\n</app-header>\n```\n\n**resize-snapped-title**\nUpon scrolling past a threshold, this effect fades in/out the titles using opacity transitions.\nSimilarly to `resize-title`, the `main-title` and `condensed-title` elements must be placed in the\nlight DOM.\n\n**waterfall**\nToggles the shadow property in app-header to create a sense of depth (as recommended in the\nMD spec) between the header and the underneath content. You can change the shadow by\ncustomizing the `--app-header-shadow` mixin. For example:\n\n```css\napp-header {\n --app-header-shadow: {\n box-shadow: inset 0px 5px 2px -3px rgba(0, 0, 0, 0.2);\n };\n}\n```\n\n```html\n<app-header condenses reveals effects=\"waterfall\">\n <app-toolbar>\n <h1 main-title>App name</h1>\n </app-toolbar>\n</app-header>\n```\n\n**material**\nInstalls the waterfall, resize-title, blend-background and parallax-background effects.\n\n\n### Content attributes\n\nAttribute | Description | Default\n----------|---------------------|----------------------------------------\n`sticky` | Element that remains at the top when the header condenses. | The first app-toolbar in the light DOM.\n\n\n## Styling\n\nMixin | Description | Default\n------|-------------|----------\n`--app-header-background-front-layer` | Applies to the front layer of the background. | {}\n`--app-header-background-rear-layer` | Applies to the rear layer of the background. | {}\n`--app-header-shadow` | Applies to the shadow. | {}\n\n",
        "type": "List (Html.Attribute msg) -> List (Html.Html msg) -> Html.Html msg"
      },
      {
        "name": "headerLayout",
        "comment": " app-header-layout is a wrapper element that positions an app-header and other content. This\nelement uses the document scroll by default, but it can also define its own scrolling region.\n\nUsing the document scroll:\n\n```html\n<app-header-layout>\n <app-header slot=\"header\" fixed condenses effects=\"waterfall\">\n <app-toolbar>\n <div main-title>App name</div>\n </app-toolbar>\n </app-header>\n <div>\n main content\n </div>\n</app-header-layout>\n```\n\nUsing an own scrolling region:\n\n```html\n<app-header-layout has-scrolling-region style=\"width: 300px; height: 400px;\">\n <app-header slot=\"header\" fixed condenses effects=\"waterfall\">\n <app-toolbar>\n <div main-title>App name</div>\n </app-toolbar>\n </app-header>\n <div>\n main content\n </div>\n</app-header-layout>\n```\n\nAdd the `fullbleed` attribute to app-header-layout to make it fit the size of its container:\n\n```html\n<app-header-layout fullbleed>\n ...\n</app-header-layout>\n```\n\n",
        "type": "List (Html.Attribute msg) -> List (Html.Html msg) -> Html.Html msg"
      },
      {
        "name": "toolbar",
        "comment": " app-toolbar is a horizontal toolbar containing items that can be used for\nlabel, navigation, search and actions.\n\n\n### Example\n\nAdd a title to the toolbar.\n\n```html\n<app-toolbar>\n <div main-title>App name</div>\n</app-toolbar>\n```\n\nAdd a button to the left and right side of the toolbar.\n\n```html\n<app-toolbar>\n <paper-icon-button icon=\"menu\"></paper-icon-button>\n <div main-title>App name</div>\n <paper-icon-button icon=\"search\"></paper-icon-button>\n</app-toolbar>\n```\n\nYou can use the attributes `top-item` or `bottom-item` to completely fit an element\nto the top or bottom of the toolbar respectively.\n\n\n### Content attributes\n\nAttribute | Description\n---------------------|---------------------------------------------------------\n`main-title` | The main title element.\n`condensed-title` | The title element if used inside a condensed app-header.\n`spacer` | Adds a left margin of `64px`.\n`bottom-item` | Sticks the element to the bottom of the toolbar.\n`top-item` | Sticks the element to the top of the toolbar.\n\n\n### Styling\n\nCustom property | Description | Default\n-----------------------------|------------------------------|-----------------------\n`--app-toolbar-font-size` | Toolbar font size | 20px\n\n",
        "type": "List (Html.Attribute msg) -> List (Html.Html msg) -> Html.Html msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Polymer.Paper.Spinner",
    "comment": " Elements from paper-spinner component. See <https://www.webcomponents.org/element/PolymerElements/paper-spinner>\n\n\n# Elements\n\n@docs spinner, spinnerLite\n\n",
    "aliases": [],
    "types": [],
    "values": [
      {
        "name": "spinner",
        "comment": " Material design: [Progress & activity](https://www.google.com/design/spec/components/progress-activity.html)\n\nElement providing a multiple color material design circular spinner.\n\n<paper-spinner active></paper-spinner>\n\nThe default spinner cycles between four layers of colors; by default they are\nblue, red, yellow and green. It can be customized to cycle between four different\ncolors. Use <paper-spinner-lite> for single color spinners.\n\n\n### Accessibility\n\nAlt attribute should be set to provide adequate context for accessibility. If not provided,\nit defaults to 'loading'.\nEmpty alt can be provided to mark the element as decorative if alternative content is provided\nin another form (e.g. a text block following the spinner).\n\n<paper-spinner alt=\"Loading contacts list\" active></paper-spinner>\n\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-spinner-layer-1-color` | Color of the first spinner rotation | `--google-blue-500`\n`--paper-spinner-layer-2-color` | Color of the second spinner rotation | `--google-red-500`\n`--paper-spinner-layer-3-color` | Color of the third spinner rotation | `--google-yellow-500`\n`--paper-spinner-layer-4-color` | Color of the fourth spinner rotation | `--google-green-500`\n`--paper-spinner-stroke-width` | The width of the spinner stroke | 3px\n\n",
        "type": "List (Html.Attribute msg) -> List (Html.Html msg) -> Html.Html msg"
      },
      {
        "name": "spinnerLite",
        "comment": " Material design: [Progress & activity](https://www.google.com/design/spec/components/progress-activity.html)\n\nElement providing a single color material design circular spinner.\n\n<paper-spinner-lite active></paper-spinner-lite>\n\nThe default spinner is blue. It can be customized to be a different color.\n\n\n### Accessibility\n\nAlt attribute should be set to provide adequate context for accessibility. If not provided,\nit defaults to 'loading'.\nEmpty alt can be provided to mark the element as decorative if alternative content is provided\nin another form (e.g. a text block following the spinner).\n\n<paper-spinner-lite alt=\"Loading contacts list\" active></paper-spinner-lite>\n\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-spinner-color` | Color of the spinner | `--google-blue-500`\n`--paper-spinner-stroke-width` | The width of the spinner stroke | 3px\n\n",
        "type": "List (Html.Attribute msg) -> List (Html.Html msg) -> Html.Html msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Polymer.Paper.ToggleButton",
    "comment": " Elements from paper-toggle-button component. See <https://www.webcomponents.org/element/PolymerElements/paper-toggle-button>\n\n\n# Elements\n\n@docs toggleButton\n\n",
    "aliases": [],
    "types": [],
    "values": [
      {
        "name": "toggleButton",
        "comment": " Material design: [Switch](https://www.google.com/design/spec/components/selection-controls.html#selection-controls-switch)\n\n`paper-toggle-button` provides a ON/OFF switch that user can toggle the state\nby tapping or by dragging the switch.\n\nExample:\n\n<paper-toggle-button></paper-toggle-button>\n\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-toggle-button-unchecked-bar-color` | Slider color when the input is not checked | `#000000`\n`--paper-toggle-button-unchecked-button-color` | Button color when the input is not checked | `--paper-grey-50`\n`--paper-toggle-button-unchecked-ink-color` | Selected/focus ripple color when the input is not checked | `--dark-primary-color`\n`--paper-toggle-button-checked-bar-color` | Slider button color when the input is checked | `--primary-color`\n`--paper-toggle-button-checked-button-color` | Button color when the input is checked | `--primary-color`\n`--paper-toggle-button-checked-ink-color` | Selected/focus ripple color when the input is checked | `--primary-color`\n`--paper-toggle-button-invalid-bar-color` | Slider button color when the input is invalid | `--error-color`\n`--paper-toggle-button-invalid-button-color` | Button color when the input is invalid | `--error-color`\n`--paper-toggle-button-invalid-ink-color` | Selected/focus ripple color when the input is invalid | `--error-color`\n`--paper-toggle-button-unchecked-bar` | Mixin applied to the slider when the input is not checked | `{}`\n`--paper-toggle-button-unchecked-button` | Mixin applied to the slider button when the input is not checked | `{}`\n`--paper-toggle-button-unchecked-ink` | Mixin applied to the ripple when the input is not checked | `{}`\n`--paper-toggle-button-checked-bar` | Mixin applied to the slider when the input is checked | `{}`\n`--paper-toggle-button-checked-button` | Mixin applied to the slider button when the input is checked | `{}`\n`--paper-toggle-button-checked-ink` | Mixin applied to the ripple when the input is checked | `{}`\n`--paper-toggle-button-label-color` | Label color | `--primary-text-color`\n`--paper-toggle-button-label-spacing` | Spacing between the label and the button | `8px`\n\nThis element applies the mixin `--paper-font-common-base` but does not import `paper-styles/typography.html`.\nIn order to apply the `Roboto` font to this element, make sure you've imported `paper-styles/typography.html`.\n\n",
        "type": "List (Html.Attribute msg) -> List (Html.Html msg) -> Html.Html msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Polymer.Paper.Styles",
    "comment": " Elements from paper-styles component. See <https://www.webcomponents.org/element/PolymerElements/paper-styles>\n\n\n# Elements\n\n@docs styles\n\n",
    "aliases": [],
    "types": [],
    "values": [
      {
        "name": "styles",
        "comment": " The `<paper-styles>` component provides simple ways to use Material Design CSS styles\nin your application. The following imports are available:\n\n1.  [color.html](https://github.com/PolymerElements/paper-styles/blob/master/color.html):\n    a complete list of the colors defined in the Material Design [palette](https://www.google.com/design/spec/style/color.html)\n\n2.  [default-theme.html](https://github.com/PolymerElements/paper-styles/blob/master/default-theme.html): text,\n    background and accent colors that match the default Material Design theme\n\n3.  [shadow.html](https://github.com/PolymerElements/paper-styles/blob/master/shadow.html): Material Design\n    [elevation](https://www.google.com/design/spec/what-is-material/elevation-shadows.html) and shadow styles\n\n4.  [typography.html](https://github.com/PolymerElements/paper-styles/blob/master/typography.html):\n    Material Design [font](http://www.google.com/design/spec/style/typography.html#typography-styles) styles and sizes\n\n5.  [demo-pages.html](https://github.com/PolymerElements/paper-styles/blob/master/demo-pages.html): generic styles\n    used in the PolymerElements demo pages\n\nWe recommend importing each of these individual files, and using the style mixins\navailable in each ones, rather than the aggregated `paper-styles.html` as a whole.\n\n",
        "type": "List (Html.Attribute msg) -> List (Html.Html msg) -> Html.Html msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Polymer.Paper.SwatchPicker",
    "comment": " Elements from paper-swatch-picker component. See <https://www.webcomponents.org/element/PolymerElements/paper-swatch-picker>\n\n\n# Elements\n\n@docs swatchPicker\n\n",
    "aliases": [],
    "types": [],
    "values": [
      {
        "name": "swatchPicker",
        "comment": " This is a simple color picker element that will allow you to choose one\nof the Material Design colors from a list of available swatches.\n\nExample:\n\n<paper-swatch-picker></paper-swatch-picker>\n\n<paper-swatch-picker color=\"{{selectedColor}}\"></paper-swatch-picker>\n\nYou can configure the color palette being used using the `colorList` array and\nthe `columnCount` property, which specifies how many \"generic\" colours (i.e. columns\nin the picker) you want to display.\n\n<paper-swatch-picker column-count=5 color-list='[\"#65a5f2\", \"#83be54\", \"#f0d551\", \"#e5943c\", \"#a96ddb\"]'></paper-swatch-picker>\n\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-swatch-picker-color-size` | The size of each of the color boxes | `20px`\n`--paper-swatch-picker-icon-size` | The size of the color picker icon | `24px`\n`--paper-swatch-picker-icon` | Mixin applied to the color picker icon | `{}`\n\n",
        "type": "List (Html.Attribute msg) -> List (Html.Html msg) -> Html.Html msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Polymer.Paper.Checkbox",
    "comment": " Elements from paper-checkbox component. See <https://www.webcomponents.org/element/PolymerElements/paper-checkbox>\n\n\n# Elements\n\n@docs checkbox\n\n",
    "aliases": [],
    "types": [],
    "values": [
      {
        "name": "checkbox",
        "comment": " Material design: [Checkbox](https://www.google.com/design/spec/components/selection-controls.html#selection-controls-checkbox)\n\n`paper-checkbox` is a button that can be either checked or unchecked. User\ncan tap the checkbox to check or uncheck it. Usually you use checkboxes\nto allow user to select multiple options from a set. If you have a single\nON/OFF option, avoid using a single checkbox and use `paper-toggle-button`\ninstead.\n\nExample:\n\n<paper-checkbox>label</paper-checkbox>\n\n<paper-checkbox checked> label</paper-checkbox>\n\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-checkbox-unchecked-background-color` | Checkbox background color when the input is not checked | `transparent`\n`--paper-checkbox-unchecked-color` | Checkbox border color when the input is not checked | `--primary-text-color`\n`--paper-checkbox-unchecked-ink-color` | Selected/focus ripple color when the input is not checked | `--primary-text-color`\n`--paper-checkbox-checked-color` | Checkbox color when the input is checked | `--primary-color`\n`--paper-checkbox-checked-ink-color` | Selected/focus ripple color when the input is checked | `--primary-color`\n`--paper-checkbox-checkmark-color` | Checkmark color | `white`\n`--paper-checkbox-label-color` | Label color | `--primary-text-color`\n`--paper-checkbox-label-checked-color` | Label color when the input is checked | `--paper-checkbox-label-color`\n`--paper-checkbox-label-spacing` | Spacing between the label and the checkbox | `8px`\n`--paper-checkbox-label` | Mixin applied to the label | `{}`\n`--paper-checkbox-label-checked` | Mixin applied to the label when the input is checked | `{}`\n`--paper-checkbox-error-color` | Checkbox color when invalid | `--error-color`\n`--paper-checkbox-size` | Size of the checkbox | `18px`\n`--paper-checkbox-ink-size` | Size of the ripple | `48px`\n`--paper-checkbox-margin` | Margin around the checkbox container | `initial`\n`--paper-checkbox-vertical-align` | Vertical alignment of the checkbox container | `middle`\n\nThis element applies the mixin `--paper-font-common-base` but does not import `paper-styles/typography.html`.\nIn order to apply the `Roboto` font to this element, make sure you've imported `paper-styles/typography.html`.\n\n",
        "type": "List (Html.Attribute msg) -> List (Html.Html msg) -> Html.Html msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Polymer.Paper.DropdownMenu",
    "comment": " Elements from paper-dropdown-menu component. See <https://www.webcomponents.org/element/PolymerElements/paper-dropdown-menu>\n\n\n# Elements\n\n@docs dropdownMenu\n\n",
    "aliases": [],
    "types": [],
    "values": [
      {
        "name": "dropdownMenu",
        "comment": " Material design: [Dropdown menus](https://www.google.com/design/spec/components/buttons.html#buttons-dropdown-buttons)\n\n`paper-dropdown-menu` is similar to a native browser select element.\n`paper-dropdown-menu` works with selectable content. The currently selected\nitem is displayed in the control. If no item is selected, the `label` is\ndisplayed instead.\n\nExample:\n\n<paper-dropdown-menu label=\"Your favourite pastry\">\n<paper-listbox slot=\"dropdown-content\">\n<paper-item>Croissant</paper-item>\n<paper-item>Donut</paper-item>\n<paper-item>Financier</paper-item>\n<paper-item>Madeleine</paper-item>\n</paper-listbox>\n</paper-dropdown-menu>\n\nThis example renders a dropdown menu with 4 options.\n\nThe child element with the slot `dropdown-content` is used as the dropdown\nmenu. This can be a [`paper-listbox`](paper-listbox), or any other or\nelement that acts like an [`iron-selector`](iron-selector).\n\nSpecifically, the menu child must fire an\n[`iron-select`](iron-selector#event-iron-select) event when one of its\nchildren is selected, and an [`iron-deselect`](iron-selector#event-iron-deselect)\nevent when a child is deselected. The selected or deselected item must\nbe passed as the event's `detail.item` property.\n\nApplications can listen for the `iron-select` and `iron-deselect` events\nto react when options are selected and deselected.\n\n\n### Styling\n\nThe following custom properties and mixins are also available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-dropdown-menu` | A mixin that is applied to the element host | `{}`\n`--paper-dropdown-menu-disabled` | A mixin that is applied to the element host when disabled | `{}`\n`--paper-dropdown-menu-ripple` | A mixin that is applied to the internal ripple | `{}`\n`--paper-dropdown-menu-button` | A mixin that is applied to the internal menu button | `{}`\n`--paper-dropdown-menu-input` | A mixin that is applied to the internal paper input | `{}`\n`--paper-dropdown-menu-icon` | A mixin that is applied to the internal icon | `{}`\n\nYou can also use any of the `paper-input-container` and `paper-menu-button`\nstyle mixins and custom properties to style the internal input and menu button\nrespectively.\n\n",
        "type": "List (Html.Attribute msg) -> List (Html.Html msg) -> Html.Html msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Polymer.Paper.Button",
    "comment": " Elements from paper-button component. See <https://www.webcomponents.org/element/PolymerElements/paper-button>\n\n\n# Elements\n\n@docs button\n\n",
    "aliases": [],
    "types": [],
    "values": [
      {
        "name": "button",
        "comment": " Material design: [Buttons](https://www.google.com/design/spec/components/buttons.html)\n\n`paper-button` is a button. When the user touches the button, a ripple effect emanates\nfrom the point of contact. It may be flat or raised. A raised button is styled with a\nshadow.\n\nExample:\n\n<paper-button>Flat button</paper-button>\n<paper-button raised>Raised button</paper-button>\n<paper-button noink>No ripple effect</paper-button>\n<paper-button toggles>Toggle-able button</paper-button>\n\nA button that has `toggles` true will remain `active` after being clicked (and\nwill have an `active` attribute set). For more information, see the `Polymer.IronButtonState`\nbehavior.\n\nYou may use custom DOM in the button body to create a variety of buttons. For example, to\ncreate a button with an icon and some text:\n\n<paper-button>\n<iron-icon icon=\"favorite\"></iron-icon>\ncustom button content\n</paper-button>\n\nTo use `paper-button` as a link, wrap it in an anchor tag. Since `paper-button` will already\nreceive focus, you may want to prevent the anchor tag from receiving focus as well by setting\nits tabindex to -1.\n\n<a href=\"https://www.polymer-project.org/\" tabindex=\"-1\">\n<paper-button raised>Polymer Project</paper-button>\n</a>\n\n\n### Styling\n\nStyle the button with CSS as you would a normal DOM element.\n\npaper-button.fancy {\nbackground: green;\ncolor: yellow;\n}\n\npaper-button.fancy:hover {\nbackground: lime;\n}\n\npaper-button[disabled],\npaper-button[toggles][active] {\nbackground: red;\n}\n\nBy default, the ripple is the same color as the foreground at 25% opacity. You may\ncustomize the color using the `--paper-button-ink-color` custom property.\n\nThe following custom properties and mixins are also available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-button-ink-color` | Background color of the ripple | `Based on the button's color`\n`--paper-button` | Mixin applied to the button | `{}`\n`--paper-button-disabled` | Mixin applied to the disabled button. Note that you can also use the `paper-button[disabled]` selector | `{}`\n`--paper-button-flat-keyboard-focus` | Mixin applied to a flat button after it's been focused using the keyboard | `{}`\n`--paper-button-raised-keyboard-focus` | Mixin applied to a raised button after it's been focused using the keyboard | `{}`\n\n",
        "type": "List (Html.Attribute msg) -> List (Html.Html msg) -> Html.Html msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Polymer.Paper.Slider",
    "comment": " Elements from paper-slider component. See <https://www.webcomponents.org/element/PolymerElements/paper-slider>\n\n\n# Elements\n\n@docs slider\n\n",
    "aliases": [],
    "types": [],
    "values": [
      {
        "name": "slider",
        "comment": " Material design: [Sliders](https://www.google.com/design/spec/components/sliders.html)\n\n`paper-slider` allows user to select a value from a range of values by\nmoving the slider thumb. The interactive nature of the slider makes it a\ngreat choice for settings that reflect intensity levels, such as volume,\nbrightness, or color saturation.\n\nExample:\n\n<paper-slider></paper-slider>\n\nUse `min` and `max` to specify the slider range. Default is 0 to 100.\n\nExample:\n\n<paper-slider min=\"10\" max=\"200\" value=\"110\"></paper-slider>\n\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-slider-container-color` | The background color of the bar | `--paper-grey-400`\n`--paper-slider-bar-color` | The background color of the slider | `transparent`\n`--paper-slider-active-color` | The progress bar color | `--google-blue-700`\n`--paper-slider-secondary-color` | The secondary progress bar color | `--google-blue-300`\n`--paper-slider-knob-color` | The knob color | `--google-blue-700`\n`--paper-slider-disabled-knob-color` | The disabled knob color | `--paper-grey-400`\n`--paper-slider-pin-color` | The pin color | `--google-blue-700`\n`--paper-slider-font-color` | The pin's text color | `#fff`\n`--paper-slider-markers-color` | The snaps markers color | `#000`\n`--paper-slider-disabled-active-color` | The disabled progress bar color | `--paper-grey-400`\n`--paper-slider-disabled-secondary-color` | The disabled secondary progress bar color | `--paper-grey-400`\n`--paper-slider-knob-start-color` | The fill color of the knob at the far left | `transparent`\n`--paper-slider-knob-start-border-color` | The border color of the knob at the far left | `--paper-grey-400`\n`--paper-slider-pin-start-color` | The color of the pin at the far left | `--paper-grey-400`\n`--paper-slider-height` | Height of the progress bar | `2px`\n`--paper-slider-input` | Mixin applied to the input in editable mode | `{}`\n\n",
        "type": "List (Html.Attribute msg) -> List (Html.Html msg) -> Html.Html msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Polymer.Paper.Input",
    "comment": " Elements from paper-input component. See <https://www.webcomponents.org/element/PolymerElements/paper-input>\n\n\n# Elements\n\n@docs inputCharCounter, inputContainer, inputError, input, textarea\n\n",
    "aliases": [],
    "types": [],
    "values": [
      {
        "name": "input",
        "comment": " This is a fresh new hell to make this element hybrid. Basically, in 2.0\nwe lost is=, so the example same template can't be used with iron-input 1.0 and 2.0.\nExpect some conditional code (especially in the tests).\n",
        "type": "List (Html.Attribute msg) -> List (Html.Html msg) -> Html.Html msg"
      },
      {
        "name": "inputCharCounter",
        "comment": " `<paper-input-char-counter>` is a character counter for use with `<paper-input-container>`. It\nshows the number of characters entered in the input and the max length if it is specified.\n\n<paper-input-container>\n<input maxlength=\"20\">\n<paper-input-char-counter></paper-input-char-counter>\n</paper-input-container>\n\n\n### Styling\n\nThe following mixin is available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-input-char-counter` | Mixin applied to the element | `{}`\n\n",
        "type": "List (Html.Attribute msg) -> List (Html.Html msg) -> Html.Html msg"
      },
      {
        "name": "inputContainer",
        "comment": " `<paper-input-container>` is a container for a `<label>`, an `<iron-input>` or\n`<textarea>` and optional add-on elements such as an error message or character\ncounter, used to implement Material Design text fields.\n\nFor example:\n\n<paper-input-container>\n<label slot=\"label\">Your name</label>\n<iron-input slot=\"input\">\n<input>\n</iron-input>\n// In Polymer 1.0, you would use `<input is=\"iron-input\" slot=\"input\">` instead of the above.\n</paper-input-container>\n\nYou can style the nested <input> however you want; if you want it to look like a\nMaterial Design input, you can style it with the --paper-input-container-shared-input-style mixin.\n\nDo not wrap `<paper-input-container>` around elements that already include it, such as `<paper-input>`.\nDoing so may cause events to bounce infinitely between the container and its contained element.\n\n\n### Listening for input changes\n\nBy default, it listens for changes on the `bind-value` attribute on its children nodes and perform\ntasks such as auto-validating and label styling when the `bind-value` changes. You can configure\nthe attribute it listens to with the `attr-for-value` attribute.\n\n\n### Using a custom input element\n\nYou can use a custom input element in a `<paper-input-container>`, for example to implement a\ncompound input field like a social security number input. The custom input element should have the\n`paper-input-input` class, have a `notify:true` value property and optionally implements\n`Polymer.IronValidatableBehavior` if it is validatable.\n\n<paper-input-container attr-for-value=\"ssn-value\">\n<label slot=\"label\">Social security number</label>\n<ssn-input slot=\"input\" class=\"paper-input-input\"></ssn-input>\n</paper-input-container>\n\nIf you're using a `<paper-input-container>` imperatively, it's important to make sure\nthat you attach its children (the `iron-input` and the optional `label`) before you\nattach the `<paper-input-container>` itself, so that it can be set up correctly.\n\n\n### Validation\n\nIf the `auto-validate` attribute is set, the input container will validate the input and update\nthe container styling when the input value changes.\n\n\n### Add-ons\n\nAdd-ons are child elements of a `<paper-input-container>` with the `add-on` attribute and\nimplements the `Polymer.PaperInputAddonBehavior` behavior. They are notified when the input value\nor validity changes, and may implement functionality such as error messages or character counters.\nThey appear at the bottom of the input.\n\n\n### Prefixes and suffixes\n\nThese are child elements of a `<paper-input-container>` with the `prefix`\nor `suffix` attribute, and are displayed inline with the input, before or after.\n\n<paper-input-container>\n<div slot=\"prefix\">$</div>\n<label slot=\"label\">Total</label>\n<iron-input slot=\"input\">\n<input>\n</iron-input>\n// In Polymer 1.0, you would use `<input is=\"iron-input\" slot=\"input\">` instead of the above.\n<paper-icon-button slot=\"suffix\" icon=\"clear\"></paper-icon-button>\n</paper-input-container>\n\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-input-container-color` | Label and underline color when the input is not focused | `--secondary-text-color`\n`--paper-input-container-focus-color` | Label and underline color when the input is focused | `--primary-color`\n`--paper-input-container-invalid-color` | Label and underline color when the input is is invalid | `--error-color`\n`--paper-input-container-input-color` | Input foreground color | `--primary-text-color`\n`--paper-input-container` | Mixin applied to the container | `{}`\n`--paper-input-container-disabled` | Mixin applied to the container when it's disabled | `{}`\n`--paper-input-container-label` | Mixin applied to the label | `{}`\n`--paper-input-container-label-focus` | Mixin applied to the label when the input is focused | `{}`\n`--paper-input-container-label-floating` | Mixin applied to the label when floating | `{}`\n`--paper-input-container-input` | Mixin applied to the input | `{}`\n`--paper-input-container-input-focus` | Mixin applied to the input when focused | `{}`\n`--paper-input-container-input-invalid` | Mixin applied to the input when invalid | `{}`\n`--paper-input-container-input-webkit-spinner` | Mixin applied to the webkit spinner | `{}`\n`--paper-input-container-input-webkit-clear` | Mixin applied to the webkit clear button | `{}`\n`--paper-input-container-ms-clear` | Mixin applied to the Internet Explorer clear button | `{}`\n`--paper-input-container-underline` | Mixin applied to the underline | `{}`\n`--paper-input-container-underline-focus` | Mixin applied to the underline when the input is focused | `{}`\n`--paper-input-container-underline-disabled` | Mixin applied to the underline when the input is disabled | `{}`\n`--paper-input-prefix` | Mixin applied to the input prefix | `{}`\n`--paper-input-suffix` | Mixin applied to the input suffix | `{}`\n\nThis element is `display:block` by default, but you can set the `inline` attribute to make it\n`display:inline-block`.\n\n",
        "type": "List (Html.Attribute msg) -> List (Html.Html msg) -> Html.Html msg"
      },
      {
        "name": "inputError",
        "comment": " `<paper-input-error>` is an error message for use with `<paper-input-container>`. The error is\ndisplayed when the `<paper-input-container>` is `invalid`.\n\n<paper-input-container>\n<input pattern=\"[0-9]*\">\n<paper-input-error slot=\"add-on\">Only numbers are allowed!</paper-input-error>\n</paper-input-container>\n\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-input-container-invalid-color` | The foreground color of the error | `--error-color`\n`--paper-input-error` | Mixin applied to the error | `{}`\n\n",
        "type": "List (Html.Attribute msg) -> List (Html.Html msg) -> Html.Html msg"
      },
      {
        "name": "textarea",
        "comment": " `<paper-textarea>` is a multi-line text field with Material Design styling.\n\n<paper-textarea label=\"Textarea label\"></paper-textarea>\n\nSee `Polymer.PaperInputBehavior` for more API docs.\n\n\n### Validation\n\nCurrently only `required` and `maxlength` validation is supported.\n\n\n### Styling\n\nSee `Polymer.PaperInputContainer` for a list of custom properties used to\nstyle this element.\n\n",
        "type": "List (Html.Attribute msg) -> List (Html.Html msg) -> Html.Html msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Polymer.Paper.Card",
    "comment": " Elements from paper-card component. See <https://www.webcomponents.org/element/PolymerElements/paper-card>\n\n\n# Elements\n\n@docs card\n\n",
    "aliases": [],
    "types": [],
    "values": [
      {
        "name": "card",
        "comment": " Material design: [Cards](https://www.google.com/design/spec/components/cards.html)\n\n`paper-card` is a container with a drop shadow.\n\nExample:\n\n<paper-card heading=\"Card Title\">\n<div class=\"card-content\">Some content</div>\n<div class=\"card-actions\">\n<paper-button>Some action</paper-button>\n</div>\n</paper-card>\n\nExample - top card image:\n\n<paper-card heading=\"Card Title\" image=\"/path/to/image.png\" alt=\"image\">\n...\n</paper-card>\n\n\n### Accessibility\n\nBy default, the `aria-label` will be set to the value of the `heading` attribute.\n\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-card-background-color` | The background color of the card | `--primary-background-color`\n`--paper-card-header-color` | The color of the header text | `#000`\n`--paper-card-header` | Mixin applied to the card header section | `{}`\n`--paper-card-header-text` | Mixin applied to the title in the card header section | `{}`\n`--paper-card-header-image` | Mixin applied to the image in the card header section | `{}`\n`--paper-card-header-image-text` | Mixin applied to the text overlapping the image in the card header section | `{}`\n`--paper-card-content` | Mixin applied to the card content section| `{}`\n`--paper-card-actions` | Mixin applied to the card action section | `{}`\n`--paper-card` | Mixin applied to the card | `{}`\n\n",
        "type": "List (Html.Attribute msg) -> List (Html.Html msg) -> Html.Html msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Polymer.Iron.Icons",
    "comment": " Elements from iron-icons component. See <https://www.webcomponents.org/element/PolymerElements/iron-icons>\n\n\n# Elements\n\n@docs icons, iconsetSvg\n\n",
    "aliases": [],
    "types": [],
    "values": [
      {
        "name": "icons",
        "comment": " `iron-icons` is a utility import that includes the definition for the `iron-icon` element, `iron-iconset-svg` element, as well as an import for the default icon set.\n\nThe `iron-icons` directory also includes imports for additional icon sets that can be loaded into your project.\n\nExample loading icon set:\n\n<link rel=\"import\" href=\"../iron-icons/maps-icons.html\">\n\nTo use an icon from one of these sets, first prefix your `iron-icon` with the icon set name, followed by a colon, \":\", and then the icon id.\n\nExample using the directions-bus icon from the maps icon set:\n\n<iron-icon icon=\"<maps:directions-bus\"></iron-icon>>\n\nTo load a subset of icons from one of the default `iron-icons` sets, you can\nuse the [poly-icon](https://poly-icon.appspot.com/) tool. It allows you\nto select individual icons, and creates an iconset from them that you can\nuse directly in your elements.\n\nSee [iron-icon](#iron-icon) for more information about working with icons.\n\nSee [iron-iconset](#iron-iconset) and [iron-iconset-svg](#iron-iconset-svg) for more information about how to create a custom iconset.\n\n",
        "type": "List (Html.Attribute msg) -> List (Html.Html msg) -> Html.Html msg"
      },
      {
        "name": "iconsetSvg",
        "comment": " The `iron-iconset-svg` element allows users to define their own icon sets\nthat contain svg icons. The svg icon elements should be children of the\n`iron-iconset-svg` element. Multiple icons should be given distinct id's.\n\nUsing svg elements to create icons has a few advantages over traditional\nbitmap graphics like jpg or png. Icons that use svg are vector based so\nthey are resolution independent and should look good on any device. They\nare stylable via css. Icons can be themed, colorized, and even animated.\n\nExample:\n\n<iron-iconset-svg name=\"my-svg-icons\" size=\"24\">\n<svg>\n<defs>\n<g id=\"shape\">\n<rect x=\"12\" y=\"0\" width=\"12\" height=\"24\" />\n<circle cx=\"12\" cy=\"12\" r=\"12\" />\n</g>\n</defs>\n</svg>\n</iron-iconset-svg>\n\nThis will automatically register the icon set \"my-svg-icons\" to the iconset\ndatabase. To use these icons from within another element, make a\n`iron-iconset` element and call the `byId` method\nto retrieve a given iconset. To apply a particular icon inside an\nelement use the `applyIcon` method. For example:\n\niconset.applyIcon(iconNode, 'car');\n\n",
        "type": "List (Html.Attribute msg) -> List (Html.Html msg) -> Html.Html msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Polymer.Paper.Badge",
    "comment": " Elements from paper-badge component. See <https://www.webcomponents.org/element/PolymerElements/paper-badge>\n\n\n# Elements\n\n@docs badge\n\n",
    "aliases": [],
    "types": [],
    "values": [
      {
        "name": "badge",
        "comment": " `<paper-badge>` is a circular text badge that is displayed on the top right\ncorner of an element, representing a status or a notification. It will badge\nthe anchor element specified in the `for` attribute, or, if that doesn't exist,\ncentered to the parent node containing it.\n\nBadges can also contain an icon by adding the `icon` attribute and setting\nit to the id of the desired icon. Please note that you should still set the\n`label` attribute in order to keep the element accessible. Also note that you will need to import\nthe `iron-iconset` that includes the icons you want to use. See [iron-icon](../iron-icon)\nfor more information on how to import and use icon sets.\n\nExample:\n\n<div style=\"display:inline-block\">\n <span>Inbox</span>\n <paper-badge label=\"3\"></paper-badge>\n </div>\n\n<div>\n <paper-button id=\"btn\">Status</paper-button>\n <paper-badge icon=\"favorite\" for=\"btn\" label=\"favorite icon\"></paper-badge>\n </div>\n\n<div>\n <paper-icon-button id=\"account-box\" icon=\"account-box\" alt=\"account-box\"></paper-icon-button>\n <paper-badge icon=\"social:mood\" for=\"account-box\" label=\"mood icon\"></paper-badge>\n </div>\n\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-badge-background` | The background color of the badge | `--accent-color`\n`--paper-badge-opacity` | The opacity of the badge | `1.0`\n`--paper-badge-text-color` | The color of the badge text | `white`\n`--paper-badge-width` | The width of the badge circle | `20px`\n`--paper-badge-height` | The height of the badge circle | `20px`\n`--paper-badge-margin-left` | Optional spacing added to the left of the badge. | `0px`\n`--paper-badge-margin-bottom` | Optional spacing added to the bottom of the badge. | `0px`\n`--paper-badge` | Mixin applied to the badge | `{}`\n\n",
        "type": "List (Html.Attribute msg) -> List (Html.Html msg) -> Html.Html msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Polymer.Attributes",
    "comment": " Common types of attributes.\n\nUsed in `Polyner.*.Attributes` modules. You hopefully won't have to use them directly in your application, but they are exposed just in case.\n\n\n# Helpers\n\n@docs bool, number, string\n\n",
    "aliases": [],
    "types": [],
    "values": [
      {
        "name": "bool",
        "comment": " Helper for an attribute that will take a boolean value.\n\nNote that if the value is false, the attribute won't be added to the element, e.g.:\n\n    drawer\n        [ bool \"opened\" False\n        ]\n        []\n\nWill yield following DOM Element:\n\n```html\n<app-drawer></app-drawer>\n```\n\nwhereas\n\n    drawer\n        [ bool \"opened\" True\n        ]\n        []\n\nwill yield:\n\n```html\n<app-drawer opened></app-drawer>\n```\n\n",
        "type": "String -> Bool -> Html.Attribute msg"
      },
      {
        "name": "number",
        "comment": " Helper for an attribute that will take a numerical value.\n\n    progress [ number \"value\" 99 ] []\n\nwill yield:\n\n```html\n<paper-progress value=\"99\"></paper-progress>\n```\n\n",
        "type": "String -> Float -> Html.Attribute msg"
      },
      {
        "name": "string",
        "comment": " This is just an alias for `Html.Attributes.attribute`\n",
        "type": "String -> String -> Html.Attribute msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  },
  {
    "name": "Polymer.Paper.IconButton",
    "comment": " Elements from paper-icon-button component. See <https://www.webcomponents.org/element/PolymerElements/paper-icon-button>\n\n\n# Elements\n\n@docs iconButton\n\n",
    "aliases": [],
    "types": [],
    "values": [
      {
        "name": "iconButton",
        "comment": " Material design: [Icon toggles](https://www.google.com/design/spec/components/buttons.html#buttons-toggle-buttons)\n\n`paper-icon-button` is a button with an image placed at the center. When the user touches\nthe button, a ripple effect emanates from the center of the button.\n\n`paper-icon-button` includes a default icon set. Use `icon` to specify which icon\nfrom the icon set to use.\n\n<paper-icon-button icon=\"menu\"></paper-icon-button>\n\nSee [`iron-iconset`](iron-iconset) for more information about\nhow to use a custom icon set.\n\nExample:\n\n<link href=\"path/to/iron-icons/iron-icons.html\" rel=\"import\">\n\n<paper-icon-button icon=\"favorite\"></paper-icon-button>\n<paper-icon-button src=\"star.png\"></paper-icon-button>\n\nTo use `paper-icon-button` as a link, wrap it in an anchor tag. Since `paper-icon-button`\nwill already receive focus, you may want to prevent the anchor tag from receiving focus\nas well by setting its tabindex to -1.\n\n<a href=\"https://www.polymer-project.org\" tabindex=\"-1\">\n<paper-icon-button icon=\"polymer\"></paper-icon-button>\n</a>\n\n\n### Styling\n\nStyle the button with CSS as you would a normal DOM element. If you are using the icons\nprovided by `iron-icons`, they will inherit the foreground color of the button.\n\n/Applications /Library /Network /System /Users /Volumes /bin /cores /dev /etc /home /installer.failurerequests /keybase /net /opt /private /sbin /tmp /usr /var make a red \"favorite\" button */\n<paper-icon-button icon=\"favorite\" style=\"color: red;\"></paper-icon-button>\n\nBy default, the ripple is the same color as the foreground at 25% opacity. You may\ncustomize the color using the `--paper-icon-button-ink-color` custom property.\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-icon-button-disabled-text` | The color of the disabled button | `--disabled-text-color`\n`--paper-icon-button-ink-color` | Selected/focus ripple color | `--primary-text-color`\n`--paper-icon-button` | Mixin for a button | `{}`\n`--paper-icon-button-disabled` | Mixin for a disabled button | `{}`\n`--paper-icon-button-hover` | Mixin for button on hover | `{}`\n\n",
        "type": "List (Html.Attribute msg) -> List (Html.Html msg) -> Html.Html msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  }
]