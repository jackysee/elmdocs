[
  {
    "name": "Stack",
    "comment": " This library implements a stack data structure in Elm, allowing you to worry more about your business logic and less about implementing common adts.\n\n# Definition\n@docs Stack\n\n# Initialisation\n@docs initialise\n\n# Common Helpers\n@docs pop, push, toList\n\n",
    "aliases": [],
    "types": [
      {
        "name": "Stack",
        "comment": " ",
        "args": [
          "a"
        ],
        "cases": []
      }
    ],
    "values": [
      {
        "name": "initialise",
        "comment": " Initialise an empty stack.\n",
        "type": "Stack.Stack a"
      },
      {
        "name": "pop",
        "comment": " Removes the item at the top of the stack and returns it as the first item of a tuple.\n",
        "type": "Stack.Stack a -> ( Maybe.Maybe a, Stack.Stack a )"
      },
      {
        "name": "push",
        "comment": " Pushes an item onto the stack and returns the new stack. The item must be of the same type as the stack.\n",
        "type": "a -> Stack.Stack a -> Stack.Stack a"
      },
      {
        "name": "toList",
        "comment": " Convert a Stack type to a list data type\n",
        "type": "Stack.Stack a -> List a"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  }
]