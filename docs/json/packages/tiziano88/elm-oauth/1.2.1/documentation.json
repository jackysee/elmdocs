[
  {
    "name": "OAuth.Config",
    "comment": " This library contains several ready-made server configs for various OAuth 2.0 providers\n\n@docs google, facebook, digitalOcean, gitHub, stackExchange\n\n",
    "aliases": [],
    "types": [],
    "values": [
      {
        "name": "digitalOcean",
        "comment": " Base configuration for DigitalOcean endpoints.\n\nBased on https://developers.digitalocean.com/documentation/oauth/#client-application-flow\n\nNote: Verification does not seem to be provided by this endpoint.\n",
        "type": "OAuth.ServerConfig"
      },
      {
        "name": "facebook",
        "comment": " Base configuration for Facebook endpoints.\n\nBased on https://developers.facebook.com/docs/facebook-login/manually-build-a-login-flow .\n",
        "type": "OAuth.ServerConfig"
      },
      {
        "name": "gitHub",
        "comment": " Base configuration for GitHub endpoints.\n\nBased on https://developer.github.com/v3/oauth/ .\n\nNote: Does not currently work. It seems that GitHub does not currently support web-only flow.\n",
        "type": "OAuth.ServerConfig"
      },
      {
        "name": "google",
        "comment": " Base configuration for Google endpoints.\n\nBased on https://developers.google.com/identity/protocols/OAuth2UserAgent .\n",
        "type": "OAuth.ServerConfig"
      },
      {
        "name": "stackExchange",
        "comment": " Base configuration for StackExchange endpoints.\n\nBased on https://api.stackexchange.com/docs/authentication .\n\nNote: Verification does not seem to be provided by this endpoint.\n",
        "type": "OAuth.ServerConfig"
      }
    ],
    "generated-with-elm-version": "0.17.1"
  },
  {
    "name": "OAuth",
    "comment": " This library allows handling OAuth 2.0 authentication.\n\n# Client\n\n@docs Client, newClient\n\n# Configuration\n\n@docs ServerConfig, ClientConfig\n\n# Token\n\n@docs Token\n\n# App\n\n@docs buildAuthUrl, urlParser\n\n",
    "aliases": [
      {
        "name": "Client",
        "comment": " An OAuth client.\n",
        "args": [],
        "type": "{ serverConfig : OAuth.ServerConfig , clientConfig : OAuth.ClientConfig }"
      },
      {
        "name": "ClientConfig",
        "comment": " Client-side configuration for a single OAuth client.\nIt includes the endpoints used to obtain and verify tokens, and also client-specific settings.\n",
        "args": [],
        "type": "{ clientId : String, scopes : List String, redirectUrl : String }"
      },
      {
        "name": "ServerConfig",
        "comment": " Server-side configuration for a single OAuth client.\nIt includes the endpoints used to obtain and verify tokens, and also client-specific settings.\n",
        "args": [],
        "type": "{ endpointUrl : String, validateUrl : String }"
      }
    ],
    "types": [
      {
        "name": "Token",
        "comment": " Represents a validated OAuth token.\n",
        "args": [],
        "cases": [
          [
            "Validated",
            [
              "String"
            ]
          ]
        ]
      }
    ],
    "values": [
      {
        "name": "buildAuthUrl",
        "comment": " Builds an URL that when followed allows the user to authenticate with the specified provider.\n",
        "type": "OAuth.Client -> String"
      },
      {
        "name": "newClient",
        "comment": " Creates a new OAuth client based on a server configuration and a client configuration.\nNormally defined at top-level in the application.\n\n    authClient : OAuth.Client\n    authClient = OAuth.newClient serverConfig clientConfig\n\n",
        "type": "OAuth.ServerConfig -> OAuth.ClientConfig -> OAuth.Client"
      },
      {
        "name": "urlParser",
        "comment": " A function to create a URL parser to be used with a `Navigation.program`.\n\n    main =\n      Navigation.program (OAuth.urlParser authClient)\n        { init = ...\n        , view = ...\n        , update = ...\n        , urlUpdate = ...\n        , subscriptions = ...\n        }\n\n",
        "type": "OAuth.Client -> Navigation.Parser (Task.Task String OAuth.Token)"
      }
    ],
    "generated-with-elm-version": "0.17.1"
  }
]